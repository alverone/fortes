(()=>{"use strict";class e{static formatCurrency(e,l){return Intl.NumberFormat("uk-UA",{maximumFractionDigits:null!=l?l:2}).format(e)}}class l{constructor(e,l){this.address=e,this._value=l}hasValue(){return null!==this._value&&this._value.length>0}value(){return this._value}numeric(){return parseFloat(this._value)}formattedNumerical(){return e.formatCurrency(parseFloat(this.value()))}}class t{constructor(e){this.cells=e}getCell(e){const l=this.cells.filter((l=>l.address===e));return 0==l.length?null:l[0]}}class n{get(e){try{return JSON.parse(localStorage.getItem(e))}catch(l){return localStorage.getItem(e)}}set(e,l){localStorage.setItem(e,l.toString())}init(){this.set("style","cozy"),this.set("bath",!0),this.set("shower",!1),this.set("ceiling","stretch ceiling"),this.set("flooring","laminat"),this.set("hygienic_shower",!1),this.set("second_gypsum_layer",!1),this.set("floor_screed",!1),this.set("heated_flooring",!1),this.set("denoising",!1),this.set("entrance_doors",!1),this.set("conditioning",!1),this.set("amount_of_rooms",2),this.set("amount_of_bathrooms",1),this.set("appliances","gorenje"),this.set("appliances_bool_total",!1),this.set("furniture_bool",!0),this.set("space",50)}initPortugal(){this.set("style","cozy"),this.set("space",50),this.set("amount_of_rooms",2),this.set("amount_of_bathrooms",1),this.set("bath",!0),this.set("shower",!1),this.set("flooring","laminat"),this.set("finishing_materials",!1),this.set("demontage",!1),this.set("cement_screed",!1),this.set("heated_flooring",0),this.set("denoising",!1),this.set("entrance_doors",!1),this.set("windows_installation",0),this.set("builtin_furniture",!1),this.set("conditioning",0),this.set("furniture_bool",!1),this.set("appliances_bool_total",!1),this.set("appliances","gorenje")}storageToRequestBody(e){const l={};for(const t in e)"length"!==t&&"costPerMetre"!=t&&("true"!==String(e[t])?"false"!==String(e[t])?isFinite(Number(e[t]))?l[t]=Number(e[t]):l[t]=e[t]:l[t]=0:l[t]=1);return JSON.stringify(l)}}class s{static numberToEncodedLetter(e){if(isNaN(e))return;let l,t=(e=Math.abs(Math.floor(e)))%26,n=e/26;return e<=26?this.numToLetter(e):(n>=1&&(0===t&&n--,l=this.numberToEncodedLetter(n)),0===t&&(t=26),l+this.numToLetter(t))}static numToLetter(e){if(!(e>26||e<0))return 0===e?"":this.alphabet.slice(e-1,e)}}s.alphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZ",fetch("https://docs.google.com/spreadsheets/d/1KkkpKbytztt48mwP1RGgpVFpfke8-IqB0KLWA8Sn2FE/gviz/tq?tqx=out:json&gid=1219923480").then((e=>e.text())).then((i=>{var a,o,r,u,c,d,v,p,g,m,C,h,f,k,y,b,F,L,_,w,S,G,x,T,M,N,B,A,E,P,I,j,z,D,J,K,O,q,R,V,H,Q,U,W,X,Y,Z,ee,le,te,ne,se,ie,ae,oe,re,ue,ce,de,ve,pe,ge,me;const Ce=JSON.parse(i.substring(i.length-2,0).replace("/*O_o*/\ngoogle.visualization.Query.setResponse(","")).table.rows,$e=new t(Ce.map(((e,t)=>e.c.map((function(e,n){var i;if(null!==e&&null!==e.v)return new l(`${s.numberToEncodedLetter(n+1)}${t+1}`,null!=(i=e.v)?i:e.f)})).filter((e=>null!=e)))).reduce(((e,l)=>[...e,...l]))),he=new n;let fe=he.get("appliances");const ke=he.get("style"),ye=function(e){let l="J";"cozy"==e?l="J":"japandi"==e?l="L":"fusion"==e?l="N":"modern"==e?l="P":"neoclassic"==e&&(l="R");return l}(ke);let be=Boolean(he.get("appliances_bool_total")),Fe=Boolean(he.get("furniture_bool")),Le=he.get("space"),_e=Boolean(he.get("bath")),we=Boolean(he.get("shower")),Se=he.get("amount_of_rooms"),Ge=he.get("amount_of_bathrooms"),xe="",Te="",Me=Boolean(he.get("demontage")),Ne=he.get("windows_installation"),Be=Boolean(he.get("finishing_materials")),Ae=Boolean(he.get("cement_screed")),Ee=Boolean(he.get("builtin_furiture")),Pe=he.get("heated_flooring"),Ie=Boolean(he.get("denoising")),je=Boolean(he.get("entrance_doors")),ze=he.get("conditioning"),De=he.get("flooring"),Je=0,Ke=0,Oe=$("#furnitureList"),qe=Le<=40?3:Le<=80?4:Le<=100?5:Le<=130?6:Le<=150?7:Le<=175?8:9;"modern"!=ke&&"neoclassic"!=ke||(qe+=1),$("#months").html(qe.toString());const Re=$e.getCell("S46").numeric(),Ve=$e.getCell("S44").numeric();"cozy"==ke?(xe="I",Te="A"):"japandi"==ke?(xe="K",Te="B"):"fusion"==ke?(xe="M",Te="C"):"modern"==ke?(xe="O",Te="D"):"neoclassic"==ke&&(xe="Q",Te="E");let He,Qe,Ue=0;"vynil"==De?(He="60",Qe="86",Ue=Le*(Le<=70?220.33:161.8)*Re*2):"parket"==De?(He="61",Qe="87",Ue=Le*(Le<=80?369.96:240.31)*Re*2):(He="59",Qe="85",Ue=Le*(Le<=70?201.26:198.81)*Re*2);let We=$("#workList"),Xe="",Ye=2523*((Se>0?6:0)+(_e?2:0)+(we?2:0)+2*Ge)*Re*2*Ve+(_e?1:0)*Ge*2500*2*Ve*Re-950*Re/41+4e3*(we?1:0)*Ge*2*Ve*Re-800*Re/41,Ze=1974*((Se>0?3:0)+(_e?1:0)+(we?1:0)+2*Ge)*Re*2*Ve;const el=Le*Ge*(Le<=100?83.2:33.98)*Ve*Re*2,ll=(Le/Se<=50?850*Le:24*Se*3519)*Re*Ve,tl=[Le/Se<=50?Le*(Le<=60?1142.78:Le<=95?883.87:819.43)*Re*1.45:4*Math.sqrt(Le)*3*600*Re,Le*(Le<=60?283.08:Le<=95?281.22:Le<=124?338.33:362.47)*Re*1.35*1.45,Le*(Le<=60?700.67:Le<=100?687.36:Le<=130?341.25:317.36)*Re*1.1*2,Le*(Le<=60?418.86:Le<=100?416.29:Le<=135?416.73:416.67)*1.77*Re,140*(Le<=60?$e.getCell(`${xe}55`).numeric():Le<=80?50:Le<=120?78:Le<=180?114:162)*("modern"==ke||"neoclassic"==ke?1:0),Ue,Le*(Le<=70?114.47:86.84)*Re*2,Le*(Le<=70?206.59:170)*Re*2*("japandi"==ke||"fusion"==ke?1:0)],nl=[1,1,Ge,1,1,1,1,1],sl=[50,51,52,56,57,He,63,64];Je+=Ye,Xe=vl($e.getCell("F44").value(),"",Math.round(Ye)+" €"),$("#workList").append(Xe),Je+=Ze,Xe=vl($e.getCell("F45").value(),"",Math.round(Ze)+" €"),$("#workList").append(Xe),Je+=el,Xe=vl($e.getCell("F46").value(),"",Math.round(el)+" €"),$("#workList").append(Xe),Je+=ll,Xe=vl($e.getCell("F49").value(),"",Math.round(ll)+" €"),$("#workList").append(Xe);for(let e=0;e<sl.length;e++){const l=tl[e]*nl[e]*Ve;0===l||isNaN(l)||(Je+=l,Xe=vl($e.getCell("F"+sl[e]).value(),"",Math.round(l)+" €"),$("#workList").append(Xe))}if(Be){$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F68").value()}</h4><span class='notation amount'> </span><span class='notation'>${StringConsts.kCost}</span>`);let e=[$e.getCell(`${xe}69`).numeric(),$e.getCell(`${xe}70`).numeric(),$e.getCell(`${xe}71`).numeric(),$e.getCell(`${xe}72`).numeric(),$e.getCell(`${xe}73`).numeric(),64*$e.getCell("S71").numeric(),$e.getCell(`${xe}76`).numeric(),$e.getCell(`${xe}77`).numeric(),$e.getCell(`${xe}78`).numeric(),$e.getCell(`${xe}79`).numeric(),$e.getCell(`${xe}80`).numeric(),$e.getCell(`${xe}81`).numeric(),$e.getCell(`${xe}82`).numeric(),$e.getCell(`${xe}83`).numeric(),$e.getCell(`${xe+Qe}`).numeric()],l=[Ge+Se,35*Ge,.66*Le,.66*Le,.59*Le,Le<=50?42:Le<=90?60:Le<=120?84:90,Ge,Number(_e),Number(we),Number(_e)+Number(we),Ge,Ge,Ge,Ge,Le<100?Le-7*Ge:Le-10*Ge],t=[69,70,71,72,73,74,76,77,78,79,80,82,83,84,Qe];for(let n=0;n<t.length;n++){let s=e[n]*l[n]*$e.getCell("S69").numeric();0===s||isNaN(s)||(Je+=s,Xe=vl($e.getCell("F"+t[n]).value(),"",Math.round(s)+"€"),$("#workList").append(Xe))}}$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F93").value()}</h4>\n        <span class='notation amount'>${StringConsts.kAmount}</span>\n        <span class='notation'>${StringConsts.kCost}</span>`),Xe=`<div class="option-block">\n      <div class="division-block pricelist"></div>\n      <div class="list-option-container">\n        <span class='name'>${$e.getCell("F94").value()}</span>\n        <span class='list-text amount'>${qe} months</span>\n        <span class='list-text'> </span>\n      </div>\n    </div>`,$("#workList").append(Xe);const il=[(41e3*Math.ceil(($e.getCell("G18").numeric()+1+1)/5)/1.35/2/1.5+100*Le)*Ve*Re,.022*Je*Re,(2*qe*1200+3e3+220*Le)*Ve*Re],al=[95,96,97];for(let l=0;l<al.length;l++){const t=il[l];Je+=t,Xe=`<div class="option-block">\n        <div class="division-block pricelist"></div>\n        <div class="list-option-container">\n          <span class='name'>${$e.getCell(`F${al[l]}`).value()}</span>\n            <span class='list-text amount'>${e.formatCurrency(t/qe)} €/${StringConsts.kLMonth}</span>\n          <span class='list-text'>${e.formatCurrency(t)} €</span>\n        </div>\n      </div>`,$("#workList").append(Xe)}if(Fe&&($("#furnitureList").append('</div><div class="list-option-container"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${StringConsts.kKitchen}</h4>\n          <span class='notation amount'>${StringConsts.kAmount}</span>\n          <span class='notation'>${StringConsts.kCost}</span>`),ol($e.getCell("F121").value(),null==(a=$e.getCell(`${Te}121`))?void 0:a.value(),1,$e.getCell(`${xe}121`).numeric(),$e.getCell("G121").value()),ol($e.getCell("F122").value(),null==(o=$e.getCell(`${Te}122`))?void 0:o.value(),4,$e.getCell(`${xe}122`).numeric(),$e.getCell("G122").value()),ol($e.getCell("F123").value(),null==(r=$e.getCell(`${Te}123`))?void 0:r.value(),1,$e.getCell(`${xe}123`).numeric(),$e.getCell("G123").value()),pl($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),pl($("#furnitureList .list-option-container").last(),`<h4 class="pricelist-header small no-padding">${$e.getCell("F124").value()}</h4><span class='notation amount'>${StringConsts.kAmount}</span><span class='notation'>${StringConsts.kCost}</span>`),ol($e.getCell("F124").value(),null==(u=$e.getCell(Te+"124"))?void 0:u.value(),1,null==(c=$e.getCell(`${xe}124`))?void 0:c.numeric(),null==(d=$e.getCell("G124"))?void 0:d.value()),ol($e.getCell("F125").value(),null==(v=$e.getCell(Te+"125"))?void 0:v.value(),1,null==(p=$e.getCell(`${xe}125`))?void 0:p.numeric(),null==(g=$e.getCell("G125"))?void 0:g.value()),pl($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),pl($("#furnitureList .list-option-container").last(),`<h4 class="pricelist-header small no-padding">${$e.getCell("F127").value()}</h4><span class='notation amount'>${StringConsts.kAmount}</span><span class='notation'>${StringConsts.kCost}</span>`),ol($e.getCell("F128").value(),null==(m=$e.getCell(Te+"128"))?void 0:m.value(),1,null==(C=$e.getCell(`${xe}128`))?void 0:C.numeric(),null==(h=$e.getCell("G128"))?void 0:h.value()),ol($e.getCell("F129").value(),null==(f=$e.getCell(Te+"129"))?void 0:f.value(),1,null==(k=$e.getCell(`${xe}129`))?void 0:k.numeric(),null==(y=$e.getCell("G129"))?void 0:y.value()),ol($e.getCell("F130").value(),null==(b=$e.getCell(Te+"130"))?void 0:b.value(),2,null==(F=$e.getCell(`${xe}130`))?void 0:F.numeric(),null==(L=$e.getCell("G130"))?void 0:L.value()),ol($e.getCell("F131").value(),null==(_=$e.getCell(Te+"131"))?void 0:_.value(),1,null==(w=$e.getCell(`${xe}131`))?void 0:w.numeric(),null==(S=$e.getCell("G131"))?void 0:S.value()),ol($e.getCell("F132").value(),null==(G=$e.getCell(Te+"132"))?void 0:G.value(),1,null==(x=$e.getCell(`${xe}132`))?void 0:x.numeric(),null==(T=$e.getCell("G132"))?void 0:T.value()),pl($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F133").value()}</h4><span class='notation amount'>${StringConsts.kAmount}</span><span class='notation'>${StringConsts.kCost}</span>`),ol($e.getCell("F134").value(),null==(M=$e.getCell(Te+"134"))?void 0:M.value(),Math.ceil(.48*Le),null==(N=$e.getCell(`${xe}134`))?void 0:N.numeric(),null==(B=$e.getCell("G134"))?void 0:B.value()),ol($e.getCell("F135").value(),null==(A=$e.getCell(Te+"135"))?void 0:A.value(),1,null==(E=$e.getCell(`${xe}135`))?void 0:E.numeric(),null==(P=$e.getCell("G135"))?void 0:P.value()),ol($e.getCell("F137").value(),null==(I=$e.getCell(Te+"137"))?void 0:I.value(),1,null==(j=$e.getCell(`${xe}137`))?void 0:j.numeric(),null==(z=$e.getCell("G137"))?void 0:z.value()),ol($e.getCell("F139").value(),null==(D=$e.getCell(Te+"139"))?void 0:D.value(),1,null==(J=$e.getCell(`${xe}139`))?void 0:J.numeric(),null==(K=$e.getCell("G139"))?void 0:K.value()),ol($e.getCell("F140").value(),null==(O=$e.getCell(Te+"140"))?void 0:O.value(),1,null==(q=$e.getCell(`${xe}140`))?void 0:q.numeric(),null==(R=$e.getCell("G140"))?void 0:R.value()),ol($e.getCell("F136").value(),null==(V=$e.getCell(Te+"136"))?void 0:V.value(),Se>1?1:0,null==(H=$e.getCell(`${xe}136`))?void 0:H.numeric(),null==(Q=$e.getCell("G136"))?void 0:Q.value()),ol($e.getCell("F138").value(),null==(U=$e.getCell(Te+"138"))?void 0:U.value(),2,null==(W=$e.getCell(`${xe}138`))?void 0:W.numeric(),null==(X=$e.getCell("G138"))?void 0:X.value()),$("#furnitureList").append('</div><div class="list-option-container margined"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F141").value()}</h4>\n            <span class='notation amount'>${StringConsts.kAmount}</span>\n            <span class='notation'>${StringConsts.kCost}</span>`),ol($e.getCell("F142").value(),null==(Y=$e.getCell(Te+"142"))?void 0:Y.value(),Se,null==(Z=$e.getCell(`${xe}142`))?void 0:Z.numeric(),null==(ee=$e.getCell("G142"))?void 0:ee.value()),ol($e.getCell("F143").value(),null==(le=$e.getCell(Te+"143"))?void 0:le.value(),Se,null==(te=$e.getCell(`${xe}143`))?void 0:te.numeric(),null==(ne=$e.getCell("G143"))?void 0:ne.value()),ol($e.getCell("F144").value(),null==(se=$e.getCell(Te+"144"))?void 0:se.value(),Se,null==(ie=$e.getCell(`${xe}144`))?void 0:ie.numeric(),null==(ae=$e.getCell("G144"))?void 0:ae.value()),ol($e.getCell("F145").value(),null==(oe=$e.getCell(Te+"145"))?void 0:oe.value(),1,null==(re=$e.getCell(`${xe}145`))?void 0:re.numeric(),null==(ue=$e.getCell("G145"))?void 0:ue.value()),ol($e.getCell("F146").value(),null==(ce=$e.getCell(Te+"146"))?void 0:ce.value(),Se-1,null==(de=$e.getCell(`${xe}146`))?void 0:de.numeric(),null==(ve=$e.getCell("G146"))?void 0:ve.value()),pl($("#furnitureList"),vl($e.getCell("F147").value()," ",Math.round(.3*Ke)+"€")),Ke*=1.3,pl($("#furnitureList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),pl($("#furnitureList .list-option-container").last(),`<span class='name summary'>Total for appliances:</span><span class='list-text summary work'>${e.formatCurrency(Ke)} €</span>`)),Ee||Ae||Be||Ne||Me||Pe>0||Ie||je||ze){$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F102").value()}</h4><span class='notation amount'></span><span class='notation'>${StringConsts.kCost}</span>`);const l=[$e.getCell(`${xe}103`).numeric()*Le,$e.getCell(`${xe}104`).numeric(),Le<=60?440:410*Re*2,$e.getCell(`${xe}106`).numeric(),((Le<=60?90.02:Le<=95?60.78:Le<125?58.29:Le>=125?79.01:0)+(Le<=60?60.91:Le<=95?64.57:Le<125?63.87:Le>=125?66.24:0))*Le*$e.getCell("T103").numeric(),$e.getCell(`${xe}108`).numeric()/1.23,$e.getCell(`${xe}109`).numeric()/1.23,$e.getCell(`${xe}110`).numeric()/1.23],t=[Me?1:0,Ne,Ae?1:0,Pe,Ie?1:0,je?1:0,Ee?1:0,Ee?1:0],n=[103,104,105,106,107,108,109,110];for(let s=0;s<n.length;s++){const i=l[s]*t[s]*$e.getCell("S104").numeric();0!==i&&0!=t[s]&&(Je+=i,pl(We,vl(null==(pe=$e.getCell("F"+n[s]))?void 0:pe.value(),"",e.formatCurrency(i)+"€")))}if(ze>0){const l=ze*$e.getCell(`${xe}113`).numeric()*(1+$e.getCell("S113").numeric()/100)/$e.getCell("E5").numeric(),t=.05*l*$e.getCell("T103").numeric();pl(We,vl(null==(ge=$e.getCell("F113"))?void 0:ge.value(),"",e.formatCurrency(l)+"€")),pl(We,vl(null==(me=$e.getCell("F114"))?void 0:me.value(),"",e.formatCurrency(t)+"€")),Je+=t+l}}function ol(l,t,n,s,i){Fe&&0!=n&&n&&s&&(Ke+=s*n,pl(Oe,'<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"></div></div>'),null!==t?pl($("#furnitureList .option-block .list-option-container").last(),`<span class='name'>${l}, ${t}</span><span class='list-text amount'>${n} ${i}</span><span class='list-text'>${e.formatCurrency(s*n)} €</span>`):pl($("#materialsList .option-block .list-option-container").last(),`<span class='name'>${l}</span><span class='list-text'>${n} ${i} </span>`))}be||$(".comfy-section").toggle(!1),Fe||$("#furnitureList").toggle(!1),pl($("#workList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),pl($("#workList .list-option-container").last(),`<span class='name summary'>Total for construction:</span><span class='list-text summary work'>${e.formatCurrency(Je)} €</span>`),pl($("#materialsList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),pl($("#materialsList .list-option-container").last(),`<span class='name summary'>Всього по будівельній частині:</span><span class='list-text summary work'>${e.formatCurrency(Je)} €</span>`);let rl=0;const ul=document.getElementById("appliancesList"),cl=document.getElementById("appliancesListTotal"),dl=[];if("gorenje"===fe?dl.push(154,9):"bosch"===fe?dl.push(169,10):"smeg"===fe?dl.push(185,9):dl.push(154,9),be){let l="",t="";for(let n=0;n<dl[1];n++)l+=`<div class="option-block"><div class="division-block white"></div><div class="list-option-container appliances"><span class='name white'>${$e.getCell("F"+(dl[0]+n)).value()} ${$e.getCell("E"+(dl[0]+n)).value()}</span><span class='list-text white'>${e.formatCurrency(.9*$e.getCell("D"+(dl[0]+n)).numeric())} €</span></div></div>`,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${$e.getCell("F"+(dl[0]+n)).value()} ${$e.getCell("E"+(dl[0]+n)).value()}</span><span class='list-text amount'>1 piece</span><span class='list-text'>${e.formatCurrency(.9*$e.getCell("D"+(dl[0]+n)).numeric())}€</span></div></div>`,rl+=.9*$e.getCell("D"+(dl[0]+n)).numeric();const n=$e.getCell("G35").numeric(),s=$e.getCell("E5").numeric();rl+=dl[1]*n/s*.9,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>Доставка техніки</span><span class='list-text amount'></span><span class='list-text'>${e.formatCurrency(dl[1]*n/s*.9)} €</span></div></div>`,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${$e.getCell("F164").value()}</span><span class='list-text amount'></span><span class='list-text'>${e.formatCurrency(.2*rl)} €</span></div></div>`,l+=`<div class="option-block"><div class="division-block white"></div><div class="list-option-container appliances"><span class='name white'>Доставка техніки</span><span class='list-text white'>${e.formatCurrency(dl[1]*n/s*.9)} €</span></div></div>`,l+=`<div class="option-block"><div class="division-block white"></div><div class="list-option-container appliances"><span class='name white'>${$e.getCell("F164").value()}</span><span class='list-text white'>${e.formatCurrency(.2*rl)} €</span></div></div>`,rl*=1.2,t+=`<div class="division-block pricelist"></div><div class="list-option-container summary"><span class='name summary'>Всього по техніці:</span><span class='list-text summary work'>${e.formatCurrency(rl)} €</span></div>`,ul.innerHTML=l,cl.innerHTML=t}else cl.style.display="none";function vl(e,l,t){return`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${e}</span><span class='list-text amount'>${l}</span><span class='list-text'>${t}</span></div></div>`}function pl(e,l){e.append(l)}const gl=$e.getCell(`${ye}121`).numeric(),ml=$e.getCell(`${ye}122`).numeric(),Cl=$e.getCell(`${ye}123`).numeric(),$l=ml+gl+Cl;$("#kitchenPrice").html(e.formatCurrency(gl)+" €"),$("#kitchenMontage").html(e.formatCurrency(ml)+" €"),$("#kitchenDelivery").html(e.formatCurrency(Cl)+" €"),$("#kitchenTotal").html(e.formatCurrency($l)+" €"),$("#kitchenTotalPrice").html(e.formatCurrency(rl)+" €"),Fe&&(Ke=0),he.get("summedPrice")<Je?($("#totalPriceTotal").html(e.formatCurrency(Je/1.23)+" € *"),$("#totalVAT").html(e.formatCurrency(Je)+" € *")):($("#totalPriceTotal").html(e.formatCurrency(he.get("summedPrice")/1.23)),$("#totalVAT").html(e.formatCurrency(he.get("summedPrice"))))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,