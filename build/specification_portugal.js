(()=>{"use strict";var e={"./src/models/Cell.ts":
/*!****************************!*\
  !*** ./src/models/Cell.ts ***!
  \****************************/(e,t,l)=>{l.r(t),l.d(t,{Cell:()=>s});var n=l(/*! ../utils/Formatter */"./src/utils/Formatter.ts");class s{constructor(e,t){this.address=e,this._value=t}hasValue(){return null!==this._value&&this._value.length>0}value(){return this._value}numeric(){return parseFloat(this._value)}formattedNumerical(){return n.Formatter.formatCurrency(parseFloat(this.value()))}}},"./src/models/Table.ts":
/*!*****************************!*\
  !*** ./src/models/Table.ts ***!
  \*****************************/(e,t,l)=>{l.r(t),l.d(t,{Table:()=>n});class n{constructor(e){this.cells=e}getCell(e){const t=this.cells.filter((t=>t.address===e));return 0==t.length?null:t[0]}}},"./src/utils/Formatter.ts":
/*!********************************!*\
  !*** ./src/utils/Formatter.ts ***!
  \********************************/(e,t,l)=>{l.r(t),l.d(t,{Formatter:()=>n});class n{static formatCurrency(e,t){return Intl.NumberFormat("uk-UA",{maximumFractionDigits:null!=t?t:2}).format(e)}}},"./src/utils/LocalStorageHandler.ts":
/*!******************************************!*\
  !*** ./src/utils/LocalStorageHandler.ts ***!
  \******************************************/(e,t,l)=>{l.r(t),l.d(t,{LocalStorageHandler:()=>n});class n{get(e){try{return JSON.parse(localStorage.getItem(e))}catch(t){return localStorage.getItem(e)}}set(e,t){localStorage.setItem(e,t.toString())}init(){this.set("style","cozy"),this.set("bath",!0),this.set("shower",!1),this.set("ceiling","stretch ceiling"),this.set("flooring","laminat"),this.set("hygienic_shower",!1),this.set("second_gypsum_layer",!1),this.set("floor_screed",!1),this.set("heated_flooring",!1),this.set("denoising",!1),this.set("entrance_doors",!1),this.set("conditioning",!1),this.set("amount_of_rooms",2),this.set("amount_of_bathrooms",1),this.set("appliances","gorenje"),this.set("appliances_bool_total",!1),this.set("furniture_bool",!0),this.set("space",50)}initPortugal(){this.set("style","cozy"),this.set("space",50),this.set("amount_of_rooms",2),this.set("amount_of_bathrooms",1),this.set("bath",!0),this.set("shower",!1),this.set("flooring","laminat"),this.set("finishing_materials",!1),this.set("demontage",!1),this.set("cement_screed",!1),this.set("heated_flooring",0),this.set("denoising",!1),this.set("entrance_doors",!1),this.set("windows_installation",0),this.set("builtin_furniture",!1),this.set("conditioning",0),this.set("furniture_bool",!1),this.set("appliances_bool_total",!1),this.set("appliances","gorenje")}storageToRequestBody(e){const t={};for(const l in e)"length"!==l&&"costPerMetre"!=l&&("true"!==String(e[l])?"false"!==String(e[l])?isFinite(Number(e[l]))?t[l]=Number(e[l]):t[l]=e[l]:t[l]=0:t[l]=1);return JSON.stringify(t)}}},"./src/utils/Utils.ts":
/*!****************************!*\
  !*** ./src/utils/Utils.ts ***!
  \****************************/(e,t,l)=>{l.r(t),l.d(t,{Utils:()=>n});class n{static numberToEncodedLetter(e){if(isNaN(e))return;let t,l=(e=Math.abs(Math.floor(e)))%26,n=e/26;return e<=26?this.numToLetter(e):(n>=1&&(0===l&&n--,t=this.numberToEncodedLetter(n)),0===l&&(l=26),t+this.numToLetter(l))}static numToLetter(e){if(!(e>26||e<0))return 0===e?"":this.alphabet.slice(e-1,e)}}n.alphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZ"}},t={};function l(n){var s=t[n];if(void 0!==s)return s.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,l),i.exports}l.d=(e,t)=>{for(var n in t)l.o(t,n)&&!l.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};(()=>{
/*!******************************************!*\
  !*** ./src/specification_portugal_38.ts ***!
  \******************************************/
l.r(n);var e=l(/*! ./models/Cell */"./src/models/Cell.ts"),t=l(/*! ./models/Table */"./src/models/Table.ts"),s=l(/*! ./utils/LocalStorageHandler */"./src/utils/LocalStorageHandler.ts"),i=l(/*! ./utils/Utils */"./src/utils/Utils.ts"),a=l(/*! ./utils/Formatter */"./src/utils/Formatter.ts");fetch("https://docs.google.com/spreadsheets/d/1KkkpKbytztt48mwP1RGgpVFpfke8-IqB0KLWA8Sn2FE/gviz/tq?tqx=out:json&gid=1219923480").then((e=>e.text())).then((l=>{var n,o,r,u,c,d,v,p,m,g,C,h,f,F,k,y,b,L,_,w,S,x,T,G,M,N,B,P,A,E,j,O,I,z,D,H,J,K,U,q,R,V,Q,W,X,Y,Z,ee,te,le,ne,se,ie,ae,oe,re,ue,ce,de,ve,pe,me,ge;const Ce=JSON.parse(l.substring(l.length-2,0).replace("/*O_o*/\ngoogle.visualization.Query.setResponse(","")).table.rows,$e=new t.Table(Ce.map(((t,l)=>t.c.map((function(t,n){var s;if(null!==t&&null!==t.v)return new e.Cell(`${i.Utils.numberToEncodedLetter(n+1)}${l+1}`,null!=(s=t.v)?s:t.f)})).filter((e=>null!=e)))).reduce(((e,t)=>[...e,...t]))),he=new s.LocalStorageHandler;let fe=he.get("appliances");const Fe=he.get("style"),ke=function(e){let t="J";"cozy"==e?t="J":"japandi"==e?t="L":"fusion"==e?t="N":"modern"==e?t="P":"neoclassic"==e&&(t="R");return t}(Fe);let ye=Boolean(he.get("appliances_bool_total")),be=Boolean(he.get("furniture_bool")),Le=he.get("space"),_e=Boolean(he.get("bath")),we=Boolean(he.get("shower")),Se=he.get("amount_of_rooms"),xe=he.get("amount_of_bathrooms"),Te="",Ge="",Me=Boolean(he.get("demontage")),Ne=he.get("windows_installation"),Be=Boolean(he.get("finishing_materials")),Pe=Boolean(he.get("cement_screed")),Ae=Boolean(he.get("builtin_furiture")),Ee=he.get("heated_flooring"),je=Boolean(he.get("denoising")),Oe=Boolean(he.get("entrance_doors")),Ie=he.get("conditioning"),ze=he.get("flooring"),De=0,He=0,Je=$("#furnitureList"),Ke=Le<=40?3:Le<=80?4:Le<=100?5:Le<=130?6:Le<=150?7:Le<=175?8:9;"modern"!=Fe&&"neoclassic"!=Fe||(Ke+=1),$("#months").html(Ke.toString());const Ue=$e.getCell("S46").numeric(),qe=$e.getCell("S44").numeric();"cozy"==Fe?(Te="I",Ge="A"):"japandi"==Fe?(Te="K",Ge="B"):"fusion"==Fe?(Te="M",Ge="C"):"modern"==Fe?(Te="O",Ge="D"):"neoclassic"==Fe&&(Te="Q",Ge="E");let Re,Ve,Qe=0;"vynil"==ze?(Re="60",Ve="86",Qe=Le*(Le<=70?220.33:161.8)*Ue*2):"parket"==ze?(Re="61",Ve="87",Qe=Le*(Le<=80?369.96:240.31)*Ue*2):(Re="59",Ve="85",Qe=Le*(Le<=70?201.26:198.81)*Ue*2);let We=$("#workList"),Xe="",Ye=2523*((Se>0?6:0)+(_e?2:0)+(we?2:0)+2*xe)*Ue*2*qe+(_e?1:0)*xe*2500*2*qe*Ue-950*Ue/41+4e3*(we?1:0)*xe*2*qe*Ue-800*Ue/41,Ze=1974*((Se>0?3:0)+(_e?1:0)+(we?1:0)+2*xe)*Ue*2*qe;const et=Le*xe*(Le<=100?83.2:33.98)*qe*Ue*2,tt=(Le/Se<=50?850*Le:24*Se*3519)*Ue*qe,lt=[Le/Se<=50?Le*(Le<=60?1142.78:Le<=95?883.87:819.43)*Ue*1.45:4*Math.sqrt(Le)*3*600*Ue,Le*(Le<=60?283.08:Le<=95?281.22:Le<=124?338.33:362.47)*Ue*1.35*1.45,Le*(Le<=60?700.67:Le<=100?687.36:Le<=130?341.25:317.36)*Ue*1.1*2,Le*(Le<=60?418.86:Le<=100?416.29:Le<=135?416.73:416.67)*1.77*Ue,140*(Le<=60?$e.getCell(`${Te}55`).numeric():Le<=80?50:Le<=120?78:Le<=180?114:162)*("modern"==Fe||"neoclassic"==Fe?1:0),Qe,Le*(Le<=70?114.47:86.84)*Ue*2,Le*(Le<=70?206.59:170)*Ue*2*("japandi"==Fe||"fusion"==Fe?1:0)],nt=[1,1,xe,1,1,1,1,1],st=[50,51,52,56,57,Re,63,64];De+=Ye,Xe=vt($e.getCell("F44").value(),"",Math.round(Ye)+" €"),$("#workList").append(Xe),De+=Ze,Xe=vt($e.getCell("F45").value(),"",Math.round(Ze)+" €"),$("#workList").append(Xe),De+=et,Xe=vt($e.getCell("F46").value(),"",Math.round(et)+" €"),$("#workList").append(Xe),De+=tt,Xe=vt($e.getCell("F49").value(),"",Math.round(tt)+" €"),$("#workList").append(Xe);for(let e=0;e<st.length;e++){const t=lt[e]*nt[e]*qe;0===t||isNaN(t)||(De+=t,Xe=vt($e.getCell("F"+st[e]).value(),"",Math.round(t)+" €"),$("#workList").append(Xe))}if(Be){$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F68").value()}</h4><span class='notation amount'> </span><span class='notation'>${StringConsts.kCost}</span>`);let e=[$e.getCell(`${Te}69`).numeric(),$e.getCell(`${Te}70`).numeric(),$e.getCell(`${Te}71`).numeric(),$e.getCell(`${Te}72`).numeric(),$e.getCell(`${Te}73`).numeric(),64*$e.getCell("S71").numeric(),$e.getCell(`${Te}76`).numeric(),$e.getCell(`${Te}77`).numeric(),$e.getCell(`${Te}78`).numeric(),$e.getCell(`${Te}79`).numeric(),$e.getCell(`${Te}80`).numeric(),$e.getCell(`${Te}81`).numeric(),$e.getCell(`${Te}82`).numeric(),$e.getCell(`${Te}83`).numeric(),$e.getCell(`${Te+Ve}`).numeric()],t=[xe+Se,35*xe,.66*Le,.66*Le,.59*Le,Le<=50?42:Le<=90?60:Le<=120?84:90,xe,Number(_e),Number(we),Number(_e)+Number(we),xe,xe,xe,xe,Le<100?Le-7*xe:Le-10*xe],l=[69,70,71,72,73,74,76,77,78,79,80,82,83,84,Ve];for(let n=0;n<l.length;n++){let s=e[n]*t[n]*$e.getCell("S69").numeric();0===s||isNaN(s)||(De+=s,Xe=vt($e.getCell("F"+l[n]).value(),"",Math.round(s)+"€"),$("#workList").append(Xe))}}$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F93").value()}</h4>\n        <span class='notation amount'>${StringConsts.kAmount}</span>\n        <span class='notation'>${StringConsts.kCost}</span>`),Xe=`<div class="option-block">\n      <div class="division-block pricelist"></div>\n      <div class="list-option-container">\n        <span class='name'>${$e.getCell("F94").value()}</span>\n        <span class='list-text amount'>${Ke} months</span>\n        <span class='list-text'> </span>\n      </div>\n    </div>`,$("#workList").append(Xe);const it=[(41e3*Math.ceil(($e.getCell("G18").numeric()+1+1)/5)/1.35/2/1.5+100*Le)*qe*Ue,.022*De*Ue,(2*Ke*1200+3e3+220*Le)*qe*Ue],at=[95,96,97];for(let e=0;e<at.length;e++){const t=it[e];De+=t,Xe=`<div class="option-block">\n        <div class="division-block pricelist"></div>\n        <div class="list-option-container">\n          <span class='name'>${$e.getCell(`F${at[e]}`).value()}</span>\n            <span class='list-text amount'>${a.Formatter.formatCurrency(t/Ke)} €/${StringConsts.kLMonth}</span>\n          <span class='list-text'>${a.Formatter.formatCurrency(t)} €</span>\n        </div>\n      </div>`,$("#workList").append(Xe)}if(be&&($("#furnitureList").append('</div><div class="list-option-container"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${StringConsts.kKitchen}</h4>\n          <span class='notation amount'>${StringConsts.kAmount}</span>\n          <span class='notation'>${StringConsts.kCost}</span>`),ot($e.getCell("F121").value(),null==(n=$e.getCell(`${Ge}121`))?void 0:n.value(),1,$e.getCell(`${Te}121`).numeric(),$e.getCell("G121").value()),ot($e.getCell("F122").value(),null==(o=$e.getCell(`${Ge}122`))?void 0:o.value(),4,$e.getCell(`${Te}122`).numeric(),$e.getCell("G122").value()),ot($e.getCell("F123").value(),null==(r=$e.getCell(`${Ge}123`))?void 0:r.value(),1,$e.getCell(`${Te}123`).numeric(),$e.getCell("G123").value()),pt($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),pt($("#furnitureList .list-option-container").last(),`<h4 class="pricelist-header small no-padding">${$e.getCell("F124").value()}</h4><span class='notation amount'>${StringConsts.kAmount}</span><span class='notation'>${StringConsts.kCost}</span>`),ot($e.getCell("F124").value(),null==(u=$e.getCell(Ge+"124"))?void 0:u.value(),1,null==(c=$e.getCell(`${Te}124`))?void 0:c.numeric(),null==(d=$e.getCell("G124"))?void 0:d.value()),ot($e.getCell("F125").value(),null==(v=$e.getCell(Ge+"125"))?void 0:v.value(),1,null==(p=$e.getCell(`${Te}125`))?void 0:p.numeric(),null==(m=$e.getCell("G125"))?void 0:m.value()),pt($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),pt($("#furnitureList .list-option-container").last(),`<h4 class="pricelist-header small no-padding">${$e.getCell("F127").value()}</h4><span class='notation amount'>${StringConsts.kAmount}</span><span class='notation'>${StringConsts.kCost}</span>`),ot($e.getCell("F128").value(),null==(g=$e.getCell(Ge+"128"))?void 0:g.value(),1,null==(C=$e.getCell(`${Te}128`))?void 0:C.numeric(),null==(h=$e.getCell("G128"))?void 0:h.value()),ot($e.getCell("F129").value(),null==(f=$e.getCell(Ge+"129"))?void 0:f.value(),1,null==(F=$e.getCell(`${Te}129`))?void 0:F.numeric(),null==(k=$e.getCell("G129"))?void 0:k.value()),ot($e.getCell("F130").value(),null==(y=$e.getCell(Ge+"130"))?void 0:y.value(),2,null==(b=$e.getCell(`${Te}130`))?void 0:b.numeric(),null==(L=$e.getCell("G130"))?void 0:L.value()),ot($e.getCell("F131").value(),null==(_=$e.getCell(Ge+"131"))?void 0:_.value(),1,null==(w=$e.getCell(`${Te}131`))?void 0:w.numeric(),null==(S=$e.getCell("G131"))?void 0:S.value()),ot($e.getCell("F132").value(),null==(x=$e.getCell(Ge+"132"))?void 0:x.value(),1,null==(T=$e.getCell(`${Te}132`))?void 0:T.numeric(),null==(G=$e.getCell("G132"))?void 0:G.value()),pt($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F133").value()}</h4><span class='notation amount'>${StringConsts.kAmount}</span><span class='notation'>${StringConsts.kCost}</span>`),ot($e.getCell("F134").value(),null==(M=$e.getCell(Ge+"134"))?void 0:M.value(),Math.ceil(.48*Le),null==(N=$e.getCell(`${Te}134`))?void 0:N.numeric(),null==(B=$e.getCell("G134"))?void 0:B.value()),ot($e.getCell("F135").value(),null==(P=$e.getCell(Ge+"135"))?void 0:P.value(),1,null==(A=$e.getCell(`${Te}135`))?void 0:A.numeric(),null==(E=$e.getCell("G135"))?void 0:E.value()),ot($e.getCell("F137").value(),null==(j=$e.getCell(Ge+"137"))?void 0:j.value(),1,null==(O=$e.getCell(`${Te}137`))?void 0:O.numeric(),null==(I=$e.getCell("G137"))?void 0:I.value()),ot($e.getCell("F139").value(),null==(z=$e.getCell(Ge+"139"))?void 0:z.value(),1,null==(D=$e.getCell(`${Te}139`))?void 0:D.numeric(),null==(H=$e.getCell("G139"))?void 0:H.value()),ot($e.getCell("F140").value(),null==(J=$e.getCell(Ge+"140"))?void 0:J.value(),1,null==(K=$e.getCell(`${Te}140`))?void 0:K.numeric(),null==(U=$e.getCell("G140"))?void 0:U.value()),ot($e.getCell("F136").value(),null==(q=$e.getCell(Ge+"136"))?void 0:q.value(),Se>1?1:0,null==(R=$e.getCell(`${Te}136`))?void 0:R.numeric(),null==(V=$e.getCell("G136"))?void 0:V.value()),ot($e.getCell("F138").value(),null==(Q=$e.getCell(Ge+"138"))?void 0:Q.value(),2,null==(W=$e.getCell(`${Te}138`))?void 0:W.numeric(),null==(X=$e.getCell("G138"))?void 0:X.value()),$("#furnitureList").append('</div><div class="list-option-container margined"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F141").value()}</h4>\n            <span class='notation amount'>${StringConsts.kAmount}</span>\n            <span class='notation'>${StringConsts.kCost}</span>`),ot($e.getCell("F142").value(),null==(Y=$e.getCell(Ge+"142"))?void 0:Y.value(),Se,null==(Z=$e.getCell(`${Te}142`))?void 0:Z.numeric(),null==(ee=$e.getCell("G142"))?void 0:ee.value()),ot($e.getCell("F143").value(),null==(te=$e.getCell(Ge+"143"))?void 0:te.value(),Se,null==(le=$e.getCell(`${Te}143`))?void 0:le.numeric(),null==(ne=$e.getCell("G143"))?void 0:ne.value()),ot($e.getCell("F144").value(),null==(se=$e.getCell(Ge+"144"))?void 0:se.value(),Se,null==(ie=$e.getCell(`${Te}144`))?void 0:ie.numeric(),null==(ae=$e.getCell("G144"))?void 0:ae.value()),ot($e.getCell("F145").value(),null==(oe=$e.getCell(Ge+"145"))?void 0:oe.value(),1,null==(re=$e.getCell(`${Te}145`))?void 0:re.numeric(),null==(ue=$e.getCell("G145"))?void 0:ue.value()),ot($e.getCell("F146").value(),null==(ce=$e.getCell(Ge+"146"))?void 0:ce.value(),Se-1,null==(de=$e.getCell(`${Te}146`))?void 0:de.numeric(),null==(ve=$e.getCell("G146"))?void 0:ve.value()),pt($("#furnitureList"),vt($e.getCell("F147").value()," ",Math.round(.3*He)+"€")),He*=1.3,pt($("#furnitureList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),pt($("#furnitureList .list-option-container").last(),`<span class='name summary'>Total for appliances:</span><span class='list-text summary work'>${a.Formatter.formatCurrency(He)} €</span>`)),Ae||Pe||Be||Ne||Me||Ee>0||je||Oe||Ie){$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F102").value()}</h4><span class='notation amount'></span><span class='notation'>${StringConsts.kCost}</span>`);const e=[$e.getCell(`${Te}103`).numeric()*Le,$e.getCell(`${Te}104`).numeric(),Le<=60?440:410*Ue*2,$e.getCell(`${Te}106`).numeric(),((Le<=60?90.02:Le<=95?60.78:Le<125?58.29:Le>=125?79.01:0)+(Le<=60?60.91:Le<=95?64.57:Le<125?63.87:Le>=125?66.24:0))*Le*$e.getCell("T103").numeric(),$e.getCell(`${Te}108`).numeric()/1.23,$e.getCell(`${Te}109`).numeric()/1.23,$e.getCell(`${Te}110`).numeric()/1.23],t=[Me?1:0,Ne,Pe?1:0,Ee,je?1:0,Oe?1:0,Ae?1:0,Ae?1:0],l=[103,104,105,106,107,108,109,110];for(let n=0;n<l.length;n++){const s=e[n]*t[n]*$e.getCell("S104").numeric();0!==s&&0!=t[n]&&(De+=s,pt(We,vt(null==(pe=$e.getCell("F"+l[n]))?void 0:pe.value(),"",a.Formatter.formatCurrency(s)+"€")))}if(Ie>0){const e=Ie*$e.getCell(`${Te}113`).numeric()*(1+$e.getCell("S113").numeric()/100)/$e.getCell("E5").numeric(),t=.05*e*$e.getCell("T103").numeric();pt(We,vt(null==(me=$e.getCell("F113"))?void 0:me.value(),"",a.Formatter.formatCurrency(e)+"€")),pt(We,vt(null==(ge=$e.getCell("F114"))?void 0:ge.value(),"",a.Formatter.formatCurrency(t)+"€")),De+=t+e}}function ot(e,t,l,n,s){be&&0!=l&&l&&n&&(He+=n*l,pt(Je,'<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"></div></div>'),null!==t?pt($("#furnitureList .option-block .list-option-container").last(),`<span class='name'>${e}, ${t}</span><span class='list-text amount'>${l} ${s}</span><span class='list-text'>${a.Formatter.formatCurrency(n*l)} €</span>`):pt($("#materialsList .option-block .list-option-container").last(),`<span class='name'>${e}</span><span class='list-text'>${l} ${s} </span>`))}ye||$(".comfy-section").toggle(!1),be||$("#furnitureList").toggle(!1),pt($("#workList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),pt($("#workList .list-option-container").last(),`<span class='name summary'>Total for construction:</span><span class='list-text summary work'>${a.Formatter.formatCurrency(De)} €</span>`),pt($("#materialsList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),pt($("#materialsList .list-option-container").last(),`<span class='name summary'>Всього по будівельній частині:</span><span class='list-text summary work'>${a.Formatter.formatCurrency(De)} €</span>`);let rt=0;const ut=document.getElementById("appliancesList"),ct=document.getElementById("appliancesListTotal"),dt=[];if("gorenje"===fe?dt.push(154,9):"bosch"===fe?dt.push(169,10):"smeg"===fe?dt.push(185,9):dt.push(154,9),ye){let e="",t="";for(let l=0;l<dt[1];l++)e+=`<div class="option-block"><div class="division-block white"></div><div class="list-option-container appliances"><span class='name white'>${$e.getCell("F"+(dt[0]+l)).value()} ${$e.getCell("E"+(dt[0]+l)).value()}</span><span class='list-text white'>${a.Formatter.formatCurrency(.9*$e.getCell("D"+(dt[0]+l)).numeric())} €</span></div></div>`,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${$e.getCell("F"+(dt[0]+l)).value()} ${$e.getCell("E"+(dt[0]+l)).value()}</span><span class='list-text amount'>1 piece</span><span class='list-text'>${a.Formatter.formatCurrency(.9*$e.getCell("D"+(dt[0]+l)).numeric())}€</span></div></div>`,rt+=.9*$e.getCell("D"+(dt[0]+l)).numeric();const l=$e.getCell("G35").numeric(),n=$e.getCell("E5").numeric();rt+=dt[1]*l/n*.9,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>Доставка техніки</span><span class='list-text amount'></span><span class='list-text'>${a.Formatter.formatCurrency(dt[1]*l/n*.9)} €</span></div></div>`,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${$e.getCell("F164").value()}</span><span class='list-text amount'></span><span class='list-text'>${a.Formatter.formatCurrency(.2*rt)} €</span></div></div>`,e+=`<div class="option-block"><div class="division-block white"></div><div class="list-option-container appliances"><span class='name white'>Доставка техніки</span><span class='list-text white'>${a.Formatter.formatCurrency(dt[1]*l/n*.9)} €</span></div></div>`,e+=`<div class="option-block"><div class="division-block white"></div><div class="list-option-container appliances"><span class='name white'>${$e.getCell("F164").value()}</span><span class='list-text white'>${a.Formatter.formatCurrency(.2*rt)} €</span></div></div>`,rt*=1.2,t+=`<div class="division-block pricelist"></div><div class="list-option-container summary"><span class='name summary'>Всього по техніці:</span><span class='list-text summary work'>${a.Formatter.formatCurrency(rt)} €</span></div>`,ut.innerHTML=e,ct.innerHTML=t}else ct.style.display="none";function vt(e,t,l){return`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${e}</span><span class='list-text amount'>${t}</span><span class='list-text'>${l}</span></div></div>`}function pt(e,t){e.append(t)}const mt=$e.getCell(`${ke}121`).numeric(),gt=$e.getCell(`${ke}122`).numeric(),Ct=$e.getCell(`${ke}123`).numeric(),$t=gt+mt+Ct;$("#kitchenPrice").html(a.Formatter.formatCurrency(mt)+" €"),$("#kitchenMontage").html(a.Formatter.formatCurrency(gt)+" €"),$("#kitchenDelivery").html(a.Formatter.formatCurrency(Ct)+" €"),$("#kitchenTotal").html(a.Formatter.formatCurrency($t)+" €"),$("#kitchenTotalPrice").html(a.Formatter.formatCurrency(rt)+" €"),be&&(He=0),he.get("summedPrice")<De?($("#totalPriceTotal").html(a.Formatter.formatCurrency(De/1.23)+" € *"),$("#totalVAT").html(a.Formatter.formatCurrency(De)+" € *")):($("#totalPriceTotal").html(a.Formatter.formatCurrency(he.get("summedPrice")/1.23)),$("#totalVAT").html(a.Formatter.formatCurrency(he.get("summedPrice"))))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,