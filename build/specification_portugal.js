(()=>{"use strict";class e{static formatCurrency(e,l){return Intl.NumberFormat("uk-UA",{maximumFractionDigits:null!=l?l:2}).format(e)}}class l{constructor(e,l){this.address=e,this._value=l}hasValue(){return null!==this._value&&this._value.length>0}value(){return this._value}numeric(){return parseFloat(this._value)}formattedNumerical(){return e.formatCurrency(parseFloat(this.value()))}}class t{constructor(e){this.cells=e}getCell(e){const l=this.cells.filter((l=>l.address===e));return 0==l.length?null:l[0]}}class n{get(e){try{return JSON.parse(localStorage.getItem(e))}catch(l){return localStorage.getItem(e)}}set(e,l){localStorage.setItem(e,l.toString())}init(){this.set("style","cozy"),this.set("bath",!0),this.set("shower",!1),this.set("ceiling","stretch ceiling"),this.set("flooring","laminat"),this.set("hygienic_shower",!1),this.set("second_gypsum_layer",!1),this.set("floor_screed",!1),this.set("heated_flooring",!1),this.set("denoising",!1),this.set("entrance_doors",!1),this.set("conditioning",!1),this.set("amount_of_rooms",2),this.set("amount_of_bathrooms",1),this.set("appliances","gorenje"),this.set("appliances_bool_total",!1),this.set("furniture_bool",!0),this.set("space",50)}initPortugal(){this.set("style","cozy"),this.set("space",50),this.set("amount_of_rooms",2),this.set("amount_of_bathrooms",1),this.set("bath",!0),this.set("shower",!1),this.set("flooring","laminat"),this.set("finishing_materials",!1),this.set("demontage",!1),this.set("cement_screed",!1),this.set("heated_flooring",0),this.set("denoising",!1),this.set("entrance_doors",!1),this.set("windows_installation",0),this.set("builtin_furniture",!1),this.set("conditioning",0),this.set("furniture_bool",!1),this.set("appliances_bool_total",!1),this.set("appliances","gorenje")}storageToRequestBody(e){const l={};for(const t in e)"length"!==t&&"costPerMetre"!=t&&("true"!==String(e[t])?"false"!==String(e[t])?isFinite(Number(e[t]))?l[t]=Number(e[t]):l[t]=e[t]:l[t]=0:l[t]=1);return JSON.stringify(l)}}class i{static numberToEncodedLetter(e){if(isNaN(e))return;let l,t=(e=Math.abs(Math.floor(e)))%26,n=e/26;return e<=26?this.numToLetter(e):(n>=1&&(0===t&&n--,l=this.numberToEncodedLetter(n)),0===t&&(t=26),l+this.numToLetter(t))}static numToLetter(e){if(!(e>26||e<0))return 0===e?"":this.alphabet.slice(e-1,e)}}i.alphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZ",fetch("https://docs.google.com/spreadsheets/d/1KkkpKbytztt48mwP1RGgpVFpfke8-IqB0KLWA8Sn2FE/gviz/tq?tqx=out:json&gid=1219923480").then((e=>e.text())).then((s=>{var a,o,r,u,c,d,v,p,g,m,C,h,f,y,b,k,F,L,_,w,G,x,T,N,M,S,B,A,E,P,I,j,z,D,J,K,O,q,R,V,H,Q,U,W,X,Y,Z,ee,le,te,ne,ie,se,ae,oe,re,ue,ce,de,ve,pe,ge,me;const Ce=JSON.parse(s.substring(s.length-2,0).replace("/*O_o*/\ngoogle.visualization.Query.setResponse(","")).table.rows,he=new t(Ce.map(((e,t)=>e.c.map((function(e,n){var s;if(null!==e&&null!==e.v)return new l(`${i.numberToEncodedLetter(n+1)}${t+1}`,null!=(s=e.v)?s:e.f)})).filter((e=>null!=e)))).reduce(((e,l)=>[...e,...l]))),$e=new n;let fe=$e.get("appliances");const ye=$e.get("style"),be=function(e){let l="J";"cozy"==e?l="J":"japandi"==e?l="L":"fusion"==e?l="N":"modern"==e?l="P":"neoclassic"==e&&(l="R");return l}(ye);let ke=Boolean($e.get("appliances_bool_total")),Fe=Boolean($e.get("furniture_bool")),Le=$e.get("space"),_e=Boolean($e.get("bath")),we=Boolean($e.get("shower")),Ge=$e.get("amount_of_rooms"),xe=$e.get("amount_of_bathrooms"),Te="",Ne="",Me=Boolean($e.get("demontage")),Se=$e.get("windows_installation"),Be=Boolean($e.get("finishing_materials")),Ae=Boolean($e.get("cement_screed")),Ee=Boolean($e.get("builtin_furiture")),Pe=$e.get("heated_flooring"),Ie=Boolean($e.get("denoising")),je=Boolean($e.get("entrance_doors")),ze=$e.get("conditioning"),De=$e.get("flooring"),Je=0,Ke=0,Oe=$("#furnitureList"),qe=Le<=40?3:Le<=80?4:Le<=100?5:Le<=130?6:Le<=150?7:Le<=175?8:9;"modern"!=ye&&"neoclassic"!=ye||(qe+=1),$("#months").html(qe.toString());const Re=he.getCell("S46").numeric(),Ve=he.getCell("S44").numeric();"cozy"==ye?(Te="I",Ne="A"):"japandi"==ye?(Te="K",Ne="B"):"fusion"==ye?(Te="M",Ne="C"):"modern"==ye?(Te="O",Ne="D"):"neoclassic"==ye&&(Te="Q",Ne="E");let He,Qe,Ue=0;"vynil"==De?(He="60",Qe="86",Ue=Le*(Le<=70?220.33:161.8)*Re*2):"parket"==De?(He="61",Qe="87",Ue=Le*(Le<=80?369.96:240.31)*Re*2):(He="59",Qe="85",Ue=Le*(Le<=70?201.26:198.81)*Re*2);let We=$("#workList"),Xe="",Ye=2523*((Ge>0?6:0)+(_e?2:0)+(we?2:0)+2*xe)*Re*2*Ve+(_e?1:0)*xe*2500*2*Ve*Re-950*Re/41+4e3*(we?1:0)*xe*2*Ve*Re-800*Re/41,Ze=1974*((Ge>0?3:0)+(_e?1:0)+(we?1:0)+2*xe)*Re*2*Ve;const el=Le*xe*(Le<=100?83.2:33.98)*Ve*Re*2,ll=(Le/Ge<=50?850*Le:24*Ge*3519)*Re*Ve,tl=[Le/Ge<=50?Le*(Le<=60?1142.78:Le<=95?883.87:819.43)*Re*1.45:4*Math.sqrt(Le)*3*600*Re,Le*(Le<=60?283.08:Le<=95?281.22:Le<=124?338.33:362.47)*Re*1.35*1.45,Le*(Le<=60?700.67:Le<=100?687.36:Le<=130?341.25:317.36)*Re*1.1*2,Le*(Le<=60?418.86:Le<=100?416.29:Le<=135?416.73:416.67)*1.77*Re,140*(Le<=60?he.getCell(`${Te}55`).numeric():Le<=80?50:Le<=120?78:Le<=180?114:162)*("modern"==ye||"neoclassic"==ye?1:0),Ue,Le*(Le<=70?114.47:86.84)*Re*2,Le*(Le<=70?206.59:170)*Re*2*("japandi"==ye||"fusion"==ye?1:0)],nl=[1,1,xe,1,1,1,1,1],il=[50,51,52,56,57,He,63,64];Je+=Ye,Xe=ml(he.getCell("F44").value(),"",Math.round(Ye)+" €"),$("#workList").append(Xe),Je+=Ze,Xe=ml(he.getCell("F45").value(),"",Math.round(Ze)+" €"),$("#workList").append(Xe),Je+=el,Xe=ml(he.getCell("F46").value(),"",Math.round(el)+" €"),$("#workList").append(Xe),Je+=ll,Xe=ml(he.getCell("F49").value(),"",Math.round(ll)+" €"),$("#workList").append(Xe);for(let e=0;e<il.length;e++){const l=tl[e]*nl[e]*Ve;0===l||isNaN(l)||(Je+=l,Xe=ml(he.getCell("F"+il[e]).value(),"",Math.round(l)+" €"),$("#workList").append(Xe))}$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${he.getCell("F68").value()}</h4><span class='notation amount'> </span><span class='notation'>Cost</span>`);let sl=[he.getCell(`${Te}69`).numeric(),he.getCell(`${Te}70`).numeric(),he.getCell(`${Te}71`).numeric(),he.getCell(`${Te}72`).numeric(),he.getCell(`${Te}73`).numeric(),64*he.getCell("S71").numeric(),he.getCell(`${Te}76`).numeric(),he.getCell(`${Te}77`).numeric(),he.getCell(`${Te}78`).numeric(),he.getCell(`${Te}79`).numeric(),he.getCell(`${Te}80`).numeric(),he.getCell(`${Te}81`).numeric(),he.getCell(`${Te}82`).numeric(),he.getCell(`${Te}83`).numeric(),he.getCell(`${Te+Qe}`).numeric()],al=[xe+Ge,35*xe,.66*Le,.66*Le,.59*Le,Le<=50?42:Le<=90?60:Le<=120?84:90,xe,Number(_e),Number(we),Number(_e)+Number(we),xe,xe,xe,xe,Le<100?Le-7*xe:Le-10*xe],ol=[69,70,71,72,73,74,76,77,78,79,80,82,83,84,Qe];for(let e=0;e<ol.length;e++){let l=sl[e]*al[e]*he.getCell("S69").numeric();0===l||isNaN(l)||(Je+=l,Xe=ml(he.getCell("F"+ol[e]).value(),"",Math.round(l)+"€"),$("#workList").append(Xe))}$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${he.getCell("F93").value()}</h4><span class='notation amount'>Amount</span><span class='notation'>Cost</span>`),Xe=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${he.getCell("F94").value()}</span><span class='list-text amount'>${qe} months</span><span class='list-text'> </span></div></div>`,$("#workList").append(Xe);const rl=[(41e3*Math.ceil((he.getCell("G18").numeric()+1+1)/5)/1.35/2/1.5+100*Le)*Ve*Re,.022*Je*Re,(2*qe*1200+3e3+220*Le)*Ve*Re],ul=[95,96,97];for(let l=0;l<ul.length;l++){const t=rl[l];Je+=t,Xe=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${he.getCell(`F${ul[l]}`).value()}</span><span class='list-text amount'>${e.formatCurrency(t/qe)} €/month</span><span class='list-text'>${e.formatCurrency(t)} €</span></div></div>`,$("#workList").append(Xe)}if(Fe&&($("#furnitureList").append('</div><div class="list-option-container"></div>'),$("#furnitureList .list-option-container").last().append("<h4 class=\"pricelist-header small no-padding\">Kitchen</h4><span class='notation amount'>Amount</span><span class='notation'>Cost</span>"),cl(he.getCell("F121").value(),null==(a=he.getCell(`${Ne}121`))?void 0:a.value(),1,he.getCell(`${Te}121`).numeric(),he.getCell("G121").value()),cl(he.getCell("F122").value(),null==(o=he.getCell(`${Ne}122`))?void 0:o.value(),4,he.getCell(`${Te}122`).numeric(),he.getCell("G122").value()),cl(he.getCell("F123").value(),null==(r=he.getCell(`${Ne}123`))?void 0:r.value(),1,he.getCell(`${Te}123`).numeric(),he.getCell("G123").value()),Cl($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),Cl($("#furnitureList .list-option-container").last(),`<h4 class="pricelist-header small no-padding">${he.getCell("F124").value()}</h4><span class='notation amount'>Amount</span><span class='notation'>Cost</span>`),cl(he.getCell("F124").value(),null==(u=he.getCell(Ne+"124"))?void 0:u.value(),1,null==(c=he.getCell(`${Te}124`))?void 0:c.numeric(),null==(d=he.getCell("G124"))?void 0:d.value()),cl(he.getCell("F125").value(),null==(v=he.getCell(Ne+"125"))?void 0:v.value(),1,null==(p=he.getCell(`${Te}125`))?void 0:p.numeric(),null==(g=he.getCell("G125"))?void 0:g.value()),Cl($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),Cl($("#furnitureList .list-option-container").last(),`<h4 class="pricelist-header small no-padding">${he.getCell("F127").value()}</h4><span class='notation amount'>Amount</span><span class='notation'>Cost</span>`),cl(he.getCell("F128").value(),null==(m=he.getCell(Ne+"128"))?void 0:m.value(),1,null==(C=he.getCell(`${Te}128`))?void 0:C.numeric(),null==(h=he.getCell("G128"))?void 0:h.value()),cl(he.getCell("F129").value(),null==(f=he.getCell(Ne+"129"))?void 0:f.value(),1,null==(y=he.getCell(`${Te}129`))?void 0:y.numeric(),null==(b=he.getCell("G129"))?void 0:b.value()),cl(he.getCell("F130").value(),null==(k=he.getCell(Ne+"130"))?void 0:k.value(),2,null==(F=he.getCell(`${Te}130`))?void 0:F.numeric(),null==(L=he.getCell("G130"))?void 0:L.value()),cl(he.getCell("F131").value(),null==(_=he.getCell(Ne+"131"))?void 0:_.value(),1,null==(w=he.getCell(`${Te}131`))?void 0:w.numeric(),null==(G=he.getCell("G131"))?void 0:G.value()),cl(he.getCell("F132").value(),null==(x=he.getCell(Ne+"132"))?void 0:x.value(),1,null==(T=he.getCell(`${Te}132`))?void 0:T.numeric(),null==(N=he.getCell("G132"))?void 0:N.value()),Cl($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${he.getCell("F133").value()}</h4><span class='notation amount'>Amount</span><span class='notation'>Cost</span>`),cl(he.getCell("F134").value(),null==(M=he.getCell(Ne+"134"))?void 0:M.value(),Math.ceil(.48*Le),null==(S=he.getCell(`${Te}134`))?void 0:S.numeric(),null==(B=he.getCell("G134"))?void 0:B.value()),cl(he.getCell("F135").value(),null==(A=he.getCell(Ne+"135"))?void 0:A.value(),1,null==(E=he.getCell(`${Te}135`))?void 0:E.numeric(),null==(P=he.getCell("G135"))?void 0:P.value()),cl(he.getCell("F137").value(),null==(I=he.getCell(Ne+"137"))?void 0:I.value(),1,null==(j=he.getCell(`${Te}137`))?void 0:j.numeric(),null==(z=he.getCell("G137"))?void 0:z.value()),cl(he.getCell("F139").value(),null==(D=he.getCell(Ne+"139"))?void 0:D.value(),1,null==(J=he.getCell(`${Te}139`))?void 0:J.numeric(),null==(K=he.getCell("G139"))?void 0:K.value()),cl(he.getCell("F140").value(),null==(O=he.getCell(Ne+"140"))?void 0:O.value(),1,null==(q=he.getCell(`${Te}140`))?void 0:q.numeric(),null==(R=he.getCell("G140"))?void 0:R.value()),cl(he.getCell("F136").value(),null==(V=he.getCell(Ne+"136"))?void 0:V.value(),Ge>1?1:0,null==(H=he.getCell(`${Te}136`))?void 0:H.numeric(),null==(Q=he.getCell("G136"))?void 0:Q.value()),cl(he.getCell("F138").value(),null==(U=he.getCell(Ne+"138"))?void 0:U.value(),2,null==(W=he.getCell(`${Te}138`))?void 0:W.numeric(),null==(X=he.getCell("G138"))?void 0:X.value()),$("#furnitureList").append('</div><div class="list-option-container margined"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${he.getCell("F141").value()}</h4><span class='notation amount'>Amount</span><span class='notation'>Cost</span>`),cl(he.getCell("F142").value(),null==(Y=he.getCell(Ne+"142"))?void 0:Y.value(),Ge,null==(Z=he.getCell(`${Te}142`))?void 0:Z.numeric(),null==(ee=he.getCell("G142"))?void 0:ee.value()),cl(he.getCell("F143").value(),null==(le=he.getCell(Ne+"143"))?void 0:le.value(),Ge,null==(te=he.getCell(`${Te}143`))?void 0:te.numeric(),null==(ne=he.getCell("G143"))?void 0:ne.value()),cl(he.getCell("F144").value(),null==(ie=he.getCell(Ne+"144"))?void 0:ie.value(),Ge,null==(se=he.getCell(`${Te}144`))?void 0:se.numeric(),null==(ae=he.getCell("G144"))?void 0:ae.value()),cl(he.getCell("F145").value(),null==(oe=he.getCell(Ne+"145"))?void 0:oe.value(),1,null==(re=he.getCell(`${Te}145`))?void 0:re.numeric(),null==(ue=he.getCell("G145"))?void 0:ue.value()),cl(he.getCell("F146").value(),null==(ce=he.getCell(Ne+"146"))?void 0:ce.value(),Ge-1,null==(de=he.getCell(`${Te}146`))?void 0:de.numeric(),null==(ve=he.getCell("G146"))?void 0:ve.value()),Cl($("#furnitureList"),ml(he.getCell("F147").value()," ",Math.round(.3*Ke)+"€")),Ke*=1.3,Cl($("#furnitureList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),Cl($("#furnitureList .list-option-container").last(),`<span class='name summary'>Total for appliances:</span><span class='list-text summary work'>${e.formatCurrency(Ke)} €</span>`)),Ee||Ae||Be||Se||Me||Pe>0||Ie||je||ze){$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${he.getCell("F102").value()}</h4><span class='notation amount'></span><span class='notation'>Cost</span>`);const l=[he.getCell(`${Te}103`).numeric()*Le,he.getCell(`${Te}104`).numeric(),Le<=60?440:410*Re*2,he.getCell(`${Te}106`).numeric(),((Le<=60?90.02:Le<=95?60.78:Le<125?58.29:Le>=125?79.01:0)+(Le<=60?60.91:Le<=95?64.57:Le<125?63.87:Le>=125?66.24:0))*Le*he.getCell("T103").numeric(),he.getCell(`${Te}108`).numeric()/1.23,he.getCell(`${Te}109`).numeric()/1.23,he.getCell(`${Te}110`).numeric()/1.23],t=[Me?1:0,Se,Ae?1:0,Pe,Ie?1:0,je?1:0,Ee?1:0,Ee?1:0],n=[103,104,105,106,107,108,109,110];for(let i=0;i<n.length;i++){const s=l[i]*t[i]*he.getCell("S104").numeric();0!==s&&0!=t[i]&&(Je+=s,Cl(We,ml(null==(pe=he.getCell("F"+n[i]))?void 0:pe.value(),"",e.formatCurrency(s)+"€")))}if(ze>0){const l=ze*he.getCell(`${Te}113`).numeric()*(1+he.getCell("S113").numeric()/100)/he.getCell("E5").numeric(),t=.05*l*he.getCell("T103").numeric();Cl(We,ml(null==(ge=he.getCell("F113"))?void 0:ge.value(),"",e.formatCurrency(l)+"€")),Cl(We,ml(null==(me=he.getCell("F114"))?void 0:me.value(),"",e.formatCurrency(t)+"€")),Je+=t+l}}function cl(l,t,n,i,s){Fe&&0!=n&&n&&i&&(Ke+=i*n,Cl(Oe,'<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"></div></div>'),null!==t?Cl($("#furnitureList .option-block .list-option-container").last(),`<span class='name'>${l}, ${t}</span><span class='list-text amount'>${n} ${s}</span><span class='list-text'>${e.formatCurrency(i*n)} €</span>`):Cl($("#materialsList .option-block .list-option-container").last(),`<span class='name'>${l}</span><span class='list-text'>${n} ${s} </span>`))}ke||$(".comfy-section").toggle(!1),Fe||$("#furnitureList").toggle(!1),Cl($("#workList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),Cl($("#workList .list-option-container").last(),`<span class='name summary'>Total for construction:</span><span class='list-text summary work'>${e.formatCurrency(Je)} €</span>`),Cl($("#materialsList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),Cl($("#materialsList .list-option-container").last(),`<span class='name summary'>Всього по будівельній частині:</span><span class='list-text summary work'>${e.formatCurrency(Je)} €</span>`);let dl=0;const vl=document.getElementById("appliancesList"),pl=document.getElementById("appliancesListTotal"),gl=[];if("gorenje"===fe?gl.push(154,9):"bosch"===fe?gl.push(169,10):"smeg"===fe?gl.push(185,9):gl.push(154,9),ke){let l="",t="";for(let n=0;n<gl[1];n++)l+=`<div class="option-block"><div class="division-block white"></div><div class="list-option-container appliances"><span class='name white'>${he.getCell("F"+(gl[0]+n)).value()} ${he.getCell("E"+(gl[0]+n)).value()}</span><span class='list-text white'>${e.formatCurrency(.9*he.getCell("D"+(gl[0]+n)).numeric())} €</span></div></div>`,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${he.getCell("F"+(gl[0]+n)).value()} ${he.getCell("E"+(gl[0]+n)).value()}</span><span class='list-text amount'>1 piece</span><span class='list-text'>${e.formatCurrency(.9*he.getCell("D"+(gl[0]+n)).numeric())}€</span></div></div>`,dl+=.9*he.getCell("D"+(gl[0]+n)).numeric();const n=he.getCell("G35").numeric(),i=he.getCell("E5").numeric();dl+=gl[1]*n/i*.9,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>Доставка техніки</span><span class='list-text amount'></span><span class='list-text'>${e.formatCurrency(gl[1]*n/i*.9)} €</span></div></div>`,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${he.getCell("F164").value()}</span><span class='list-text amount'></span><span class='list-text'>${e.formatCurrency(.2*dl)} €</span></div></div>`,l+=`<div class="option-block"><div class="division-block white"></div><div class="list-option-container appliances"><span class='name white'>Доставка техніки</span><span class='list-text white'>${e.formatCurrency(gl[1]*n/i*.9)} €</span></div></div>`,l+=`<div class="option-block"><div class="division-block white"></div><div class="list-option-container appliances"><span class='name white'>${he.getCell("F164").value()}</span><span class='list-text white'>${e.formatCurrency(.2*dl)} €</span></div></div>`,dl*=1.2,t+=`<div class="division-block pricelist"></div><div class="list-option-container summary"><span class='name summary'>Всього по техніці:</span><span class='list-text summary work'>${e.formatCurrency(dl)} €</span></div>`,vl.innerHTML=l,pl.innerHTML=t}else pl.style.display="none";function ml(e,l,t){return`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${e}</span><span class='list-text amount'>${l}</span><span class='list-text'>${t}</span></div></div>`}function Cl(e,l){e.append(l)}const hl=he.getCell(`${be}121`).numeric(),$l=he.getCell(`${be}122`).numeric(),fl=he.getCell(`${be}123`).numeric(),yl=$l+hl+fl;$("#kitchenPrice").html(e.formatCurrency(hl)+" €"),$("#kitchenMontage").html(e.formatCurrency($l)+" €"),$("#kitchenDelivery").html(e.formatCurrency(fl)+" €"),$("#kitchenTotal").html(e.formatCurrency(yl)+" €"),$("#kitchenTotalPrice").html(e.formatCurrency(dl)+" €"),Fe&&(Ke=0),$e.get("summedPrice")<Je?($("#totalPriceTotal").html(e.formatCurrency(Je/1.23)+" € *"),$("#totalVAT").html(e.formatCurrency(Je)+" € *")):($("#totalPriceTotal").html(e.formatCurrency($e.get("summedPrice")/1.23)),$("#totalVAT").html(e.formatCurrency($e.get("summedPrice"))))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,