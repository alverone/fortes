(()=>{"use strict";class e{static formatCurrency(e){return Intl.NumberFormat("uk-UA",{maximumFractionDigits:2}).format(e)}}class t{constructor(e,t){this.address=e,this._value=t}hasValue(){return null!==this._value&&this._value.length>0}value(){return this._value}numeric(){return parseFloat(this._value)}formattedNumerical(){return e.formatCurrency(parseFloat(this.value()))}}class n{constructor(e){this.cells=e}getCell(e){const n=this.cells.filter((t=>t.address===e));return 0==n.length?new t(e,"0"):n[0]}}var l=(e=>(e[e.uk=0]="uk",e[e.en=1]="en",e))(l||{});class i{constructor(e,t=!1){if(t)switch(e){case 0:this._init();case 1:this._initPortugal();default:this._init()}}get(e){try{return JSON.parse(localStorage.getItem(e))}catch(t){return localStorage.getItem(e)}}set(e,t){localStorage.setItem(e,t.toString())}_init(){this.set("style","cozy"),this.set("bath",!0),this.set("shower",!1),this.set("ceiling","stretch ceiling"),this.set("flooring","laminat"),this.set("hygienic_shower",!1),this.set("second_gypsum_layer",!1),this.set("floor_screed",!1),this.set("heated_flooring",!1),this.set("denoising",!1),this.set("entrance_doors",!1),this.set("conditioning",!1),this.set("amount_of_rooms",2),this.set("amount_of_bathrooms",1),this.set("appliances","gorenje"),this.set("appliances_bool_total",!1),this.set("furniture_bool",!0),this.set("space",50),this.set("color",1)}_initPortugal(){this.set("style","cozy"),this.set("color",1),this.set("space",50),this.set("amount_of_rooms",2),this.set("amount_of_bathrooms",1),this.set("bath",!0),this.set("shower",!1),this.set("flooring","laminat"),this.set("finishing_materials",!1),this.set("demontage",!1),this.set("cement_screed",!1),this.set("heated_flooring",0),this.set("denoising",!1),this.set("entrance_doors",!1),this.set("windows_installation",0),this.set("builtin_furniture",!1),this.set("conditioning",0),this.set("furniture_bool",!1),this.set("appliances_bool_total",!1),this.set("appliances","gorenje"),this.set("transportation_expenses",5)}storageToRequestBody(e){const t={};for(const n in e)"length"!==n&&"costPerMetre"!=n&&"color"!=n&&("true"!==String(e[n])?"false"!==String(e[n])?isFinite(Number(e[n]))?t[n]=Number(e[n]):t[n]=e[n]:t[n]=0:t[n]=1);return JSON.stringify(t)}}class o{static numberToEncodedLetter(e){if(isNaN(e))return;let t,n=(e=Math.abs(Math.floor(e)))%26,l=e/26;return e<=26?this.numToLetter(e):(l>=1&&(0===n&&l--,t=this.numberToEncodedLetter(l)),0===n&&(n=26),t+this.numToLetter(n))}static numToLetter(e){if(!(e>26||e<0))return 0===e?"":this.alphabet.slice(e-1,e)}}o.alphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZ";class a{}a.kCost="Cost",a.kAmount="Amount",a.kKitchen="Kitchen",a.kLMonth="month";var s=(e,t,n)=>new Promise(((l,i)=>{var o=e=>{try{s(n.next(e))}catch(e){i(e)}},a=e=>{try{s(n.throw(e))}catch(e){i(e)}},s=e=>e.done?l(e.value):Promise.resolve(e.value).then(o,a);s((n=n.apply(e,t)).next())}));class r{constructor(e){this._storage=e}collectPortugalClientData(e){return s(this,null,(function*(){return fetch("https://script.google.com/macros/s/AKfycbzyzzY4bi4yQoHdsTeVmm8BxGQ-bGW_-rK_erhrFA0zKak6rQ27p-k9Mx3HWk6vKEIatw/exec",{method:"POST",body:e}).catch((e=>console.error("Error!",e.message)))}))}collectPortugalCalcData(t){return s(this,null,(function*(){const n=Boolean(this._storage.get("appliances_bool_total")),l=Boolean(this._storage.get("furniture_bool")),i=this._storage.get("space"),o=Boolean(this._storage.get("bath")),a=Boolean(this._storage.get("shower")),s=this._storage.get("amount_of_rooms"),r=this._storage.get("amount_of_bathrooms"),c=Boolean(this._storage.get("demontage")),u=this._storage.get("windows_installation"),g=Boolean(this._storage.get("finishing_materials")),p=Boolean(this._storage.get("cement_screed")),d=Boolean(this._storage.get("builtin_furiture")),m=this._storage.get("heated_flooring"),v=Boolean(this._storage.get("denoising")),h=Boolean(this._storage.get("entrance_doors")),f=this._storage.get("conditioning"),C=this._storage.get("flooring"),$=this._storage.get("transportation_expenses"),_=this._storage.get("appliances"),y=this._storage.get("summedPrice"),w=this._storage.get("costPerMetre"),b=(i<=40?3:i<=80?4:i<=100?5:i<=130?6:i<=150?7:i<=175?8:9)+("modern"==t||"neoclassic"==t?1:0),k=new FormData;return k.append("Style",t),k.append("Total cost VAT",e.formatCurrency(y)),k.append("Total cost",e.formatCurrency(y/1.23)),k.append("Cost per metre",e.formatCurrency(w)),k.append("Cost per metre VAT",e.formatCurrency(1.23*w)),k.append("Area",i.toString()),k.append("Number of bedrooms",s.toString()),k.append("Number of bathrooms",r.toString()),k.append("Bath",o?"1":"0"),k.append("Shower",a?"1":"0"),k.append("Distance from Lisbon",$.toString()),k.append("Flooring",C),k.append("Finishing materials",g?"1":"0"),k.append("Dismantling works",c?"1":"0"),k.append("Cement screed",p?"1":"0"),k.append("Entrance doors",h?"1":"0"),k.append("Soundproofing",v?"1":"0"),k.append("Built-in furniture",d?"1":"0"),k.append("Underfloor heating",m.toString()),k.append("Air conditioning",f.toString()),k.append("Window installation",u.toString()),k.append("Decorating",l?"1":"0"),k.append("Appliances",n?_:"0"),k.append("Time to completion",b.toString()),fetch("https://script.google.com/macros/s/AKfycbwnwi3SZ8gK3zSYW2DEoc6BtY9HS1stpRSHPW6pATmX2UawetpC-74YPZ5LjjX282Ki/exec",{method:"POST",body:k}).catch((e=>console.error(e)))}))}collectPortugalSpecificationData(t){return s(this,null,(function*(){const n=this._storage.get("style"),l=Boolean(this._storage.get("appliances_bool_total")),i=Boolean(this._storage.get("furniture_bool")),o=this._storage.get("space"),a=Boolean(this._storage.get("bath")),s=Boolean(this._storage.get("shower")),r=this._storage.get("amount_of_rooms"),c=this._storage.get("amount_of_bathrooms"),u=Boolean(this._storage.get("demontage")),g=this._storage.get("windows_installation"),p=Boolean(this._storage.get("finishing_materials")),d=Boolean(this._storage.get("cement_screed")),m=Boolean(this._storage.get("builtin_furiture")),v=this._storage.get("heated_flooring"),h=Boolean(this._storage.get("denoising")),f=Boolean(this._storage.get("entrance_doors")),C=this._storage.get("conditioning"),$=this._storage.get("flooring"),_=this._storage.get("transportation_expenses"),y=this._storage.get("appliances"),w=this._storage.get("summedPrice"),b=this._storage.get("costPerMetre"),k=(o<=40?3:o<=80?4:o<=100?5:o<=130?6:o<=150?7:o<=175?8:9)+("modern"==n||"neoclassic"==n?1:0);return t.append("Style",n),t.append("Total cost VAT",e.formatCurrency(w)),t.append("Total cost",e.formatCurrency(w/1.23)),t.append("Cost per metre",e.formatCurrency(b)),t.append("Cost per metre VAT",e.formatCurrency(1.23*b)),t.append("Area",o.toString()),t.append("Number of bedrooms",r.toString()),t.append("Number of bathrooms",c.toString()),t.append("Bath",a?"1":"0"),t.append("Shower",s?"1":"0"),t.append("Distance from Lisbon",_.toString()),t.append("Flooring",$),t.append("Finishing materials",p?"1":"0"),t.append("Dismantling works",u?"1":"0"),t.append("Cement screed",d?"1":"0"),t.append("Entrance doors",f?"1":"0"),t.append("Soundproofing",h?"1":"0"),t.append("Built-in furniture",m?"1":"0"),t.append("Underfloor heating",v.toString()),t.append("Air conditioning",C.toString()),t.append("Window installation",g.toString()),t.append("Decorating",i?"1":"0"),t.append("Appliances",l?y:"0"),t.append("Time to completion",k.toString()),fetch("https://script.google.com/macros/s/AKfycbzwN8RKdZRUWDBLNnvUwxxK9FXHUVPeqPpGFJYu9NT9zLsc34JKzIHgHz1CwFbNYGzs/exec",{method:"POST",body:t}).catch((e=>console.error(e)))}))}}var c=(e,t,n)=>new Promise(((l,i)=>{var o=e=>{try{s(n.next(e))}catch(e){i(e)}},a=e=>{try{s(n.throw(e))}catch(e){i(e)}},s=e=>e.done?l(e.value):Promise.resolve(e.value).then(o,a);s((n=n.apply(e,t)).next())}));$((function(){const s=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,u=new i(l.en,!1),g=new r(u),p=u.get("style"),d=(function(e){let t="J";"cozy"==e?t="J":"japandi"==e?t="L":"fusion"==e?t="N":"modern"==e?t="P":"neoclassic"==e&&(t="R")}(p),Boolean(u.get("appliances_bool_total"))),m=Boolean(u.get("furniture_bool")),v=u.get("space"),h=Boolean(u.get("bath")),f=Boolean(u.get("shower")),C=u.get("amount_of_rooms"),_=u.get("amount_of_bathrooms"),y=Boolean(u.get("demontage")),w=u.get("windows_installation"),b=Boolean(u.get("finishing_materials")),k=Boolean(u.get("cement_screed")),L=Boolean(u.get("builtin_furiture")),S=u.get("heated_flooring"),F=Boolean(u.get("denoising")),B=Boolean(u.get("entrance_doors")),x=u.get("conditioning"),P=u.get("flooring"),T=u.get("transportation_expenses"),E=u.get("appliances"),A=u.get("summedPrice"),N=u.get("costPerMetre"),G=$("#furnitureList");let D="",M="",z=0,K=0;const I=(v<=40?3:v<=80?4:v<=100?5:v<=130?6:v<=150?7:v<=175?8:9)+("modern"==p||"neoclassic"==p?1:0);$("#months").html(I.toString()),$("#total").html(e.formatCurrency(A)),$("#space").html(v.toString()),$("#pricePerMetre").html(e.formatCurrency(N)),fetch("https://docs.google.com/spreadsheets/d/1KkkpKbytztt48mwP1RGgpVFpfke8-IqB0KLWA8Sn2FE/gviz/tq?tqx=out:json&gid=1219923480").then((e=>e.text())).then((l=>{var i,s,r,c,u,g,A,N,q,j,O,J,V,W,R,Y,Q,Z,X,ee,te,ne,le,ie,oe,ae,se,re,ce,ue,ge,pe,de,me,ve,he,fe,Ce,$e,_e,ye,we,be,ke,Le,Se,Fe,Be,xe,Pe,Te,Ee,Ae,Ne,Ge,De,Me,ze,Ke,Ie,qe,je,Oe;const Je=JSON.parse(l.substring(l.length-2,0).replace("/*O_o*/\ngoogle.visualization.Query.setResponse(","")).table.rows,He=new n(Je.map(((e,n)=>e.c.map((function(e,l){var i;if(null!==e&&null!==e.v)return new t(`${o.numberToEncodedLetter(l+1)}${n+1}`,null!=(i=e.v)?i:e.f)})).filter((e=>null!=e)))).reduce(((e,t)=>[...e,...t]))),Ue=He.getCell("S46").numeric(),Ve=He.getCell("S44").numeric(),We=He.getCell("S69").numeric(),Re=He.getCell("T103").numeric(),Ye=He.getCell("S104").numeric();"cozy"==p?(D="I",M="A"):"japandi"==p?(D="K",M="B"):"fusion"==p?(D="M",M="C"):"modern"==p?(D="O",M="D"):"neoclassic"==p&&(D="Q",M="E");let Qe,Ze,Xe=0;"vynil"==P?(Qe="60",Ze="86",Xe=v*(v<70?220.33:161.8)*Ue*3):"parket"==P?(Qe="61",Ze="87",Xe=v*(v<80?369.96:240.31)*Ue*2):(Qe="59",Ze="85",Xe=v*(v<70?201.26:198.81)*Ue*2);const et=$("#workList");let tt="";const nt=2523*((C>0?6:0)+(h?2:0)+(f?2:0)+2*_)*Ue*2*Ve+(h?1:0)*_*2500*2*Ve*Ue-950*Ue/41+4e3*(f?1:0)*_*2*Ve*Ue-800*Ue/41,lt=1974*((C>0?3:0)+(h?1:0)+(f?1:0)+2*_)*Ue*2*Ve,it=v*_*(v<=100?83.2:33.98)*Ve*Ue*2,ot=(v/C<=50?850*v:24*C*3519)*Ue*Ve,at=[He.getCell("J47").numeric()/Ve,He.getCell("J48").numeric()/Ve,v/C<=50?v*(v<=60?1142.78:v<=95?883.87:819.43)*Ue*1.45:4*Math.sqrt(v)*3*600*Ue,v*(v<=60?283.08:v<=95?281.22:v<=124?338.33:362.47)*Ue*1.35*1.45,v*(v<=60?700.67:v<=100?687.36:v<=130?341.25:317.36)*Ue*1.1*1.5/2,2100*Ue,(v/C<50?1.77*(v<=50?1e3*v:990*v):4*Math.sqrt(v)*3*600)*Ue,v*(v<=60?418.86:v<=100?416.29:v<=135?416.73:416.67)*1.77*Ue,140*(v<=60?40:v<=80?50:v<=120?78:v<=180?114:162)*("modern"==p||"neoclassic"==p?1:0)*1.77*Ue,Xe,v*(v<=70?114.47:86.84)*Ue*2,v*(v<=70?206.59:170)*Ue*2*("japandi"==p||"fusion"==p?1:0)],st=[f?_:0,h?_:0,1,1,_,_+C,1,1,1,1,"japandi"!==p&&"fusion"!==p?1:0,"japandi"===p||"fusion"===p?1:0],rt=[47,48,50,51,52,53,55,56,57,Qe,63,64];z+=nt,tt=H(He.getCell("F44").value(),"",Math.round(nt)+" €"),$("#workList").append(tt),z+=lt,tt=H(He.getCell("F45").value(),"",Math.round(lt)+" €"),$("#workList").append(tt),z+=it,tt=H(He.getCell("F46").value(),"",Math.round(it)+" €"),$("#workList").append(tt),z+=ot,tt=H(He.getCell("F49").value(),"",Math.round(ot)+" €"),$("#workList").append(tt);for(let e=0;e<rt.length;e++){const t=at[e]*st[e]*Ve;0===t||isNaN(t)||(z+=t,tt=H(He.getCell("F"+rt[e]).value(),"",Math.round(t)+" €"),$("#workList").append(tt))}if(b){$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${He.getCell("F68").value()}</h4><span class='notation amount'> </span><span class='notation'>${a.kCost}</span>`);const e=[He.getCell(`${D}69`).numeric(),He.getCell(`${D}70`).numeric(),He.getCell(`${D}71`).numeric(),He.getCell(`${D}72`).numeric(),He.getCell(`${D}73`).numeric(),He.getCell(`${D}74`).numeric(),He.getCell(`${D}76`).numeric(),He.getCell(`${D}77`).numeric(),He.getCell(`${D}78`).numeric(),He.getCell(`${D}79`).numeric(),He.getCell(`${D}80`).numeric(),He.getCell(`${D}81`).numeric(),He.getCell(`${D}82`).numeric(),He.getCell(`${D+Ze}`).numeric()];let t=[_+C,35*_,.66*v,.66*v,.59*v,v<=50?42:v<=90?60:v<=120?84:90,_,Number(h),Number(f),Number(h)+Number(f),_,_,_,v<100?v-7*_:v-10*_];const n=[69,70,71,72,73,74,76,77,78,79,80,81,82,Ze];for(let l=0;l<n.length;l++){const i=e[l]*t[l]*He.getCell("S69").numeric()/1.23;0===i||isNaN(i)||(z+=i,tt=H(He.getCell("F"+n[l]).value(),"",Math.round(i)+"€"),$("#workList").append(tt))}}tt=`<div class="option-block">\n      <div class="division-block pricelist"></div>\n      <div class="list-option-container">\n        <span class='name'>${He.getCell("F93").value()}</span>\n        <span class='list-text amount'>${I} months</span>\n        <span class='list-text'> </span>\n      </div>\n    </div>`,$("#workList").append(tt);const ct=[(41e3*Math.ceil((T+2)/5)/1.35/2/1.5+100*v)*Ve*Ue,.022*z*Ue,(2*I*1200+3e3+220*v)*Ve*Ue],ut=[94,95,96];tt="";for(let t=0;t<ut.length;t++){const n=ct[t];z+=n,tt+=`<div class="option-block">\n        <div class="division-block pricelist"></div>\n        <div class="list-option-container">\n          <span class='name'>${He.getCell(`F${ut[t]}`).value()}</span>\n            <span class='list-text amount'></span>\n          <span class='list-text'>${e.formatCurrency(n)} €</span>\n        </div>\n      </div>`}$("#workList").append(tt),tt="",U(et,'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),U($("#workList .list-option-container").last(),`<span class='pricelist-header small no-padding'>Total for construction with components and finishing materials:</span><span class='list-text summary work'>${e.formatCurrency(z)} €</span>`),m&&($("#furnitureList").append('</div><div class="list-option-container"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${a.kKitchen}</h4>\n          <span class='notation amount'>${a.kAmount}</span>\n          <span class='notation'>${a.kCost}</span>`),gt(He.getCell("F121").value(),null==(i=He.getCell(`${M}121`))?void 0:i.value(),1,He.getCell(`${D}121`).numeric(),He.getCell("G121").value()),gt(He.getCell("F122").value(),null==(s=He.getCell(`${M}122`))?void 0:s.value(),4,He.getCell(`${D}122`).numeric(),He.getCell("G122").value()),gt(He.getCell("F123").value(),null==(r=He.getCell(`${M}123`))?void 0:r.value(),1,He.getCell(`${D}123`).numeric(),He.getCell("G123").value()),U($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),U($("#furnitureList .list-option-container").last(),`<h4 class="pricelist-header small no-padding">${He.getCell("F124").value()}</h4><span class='notation amount'>${a.kAmount}</span><span class='notation'>${a.kCost}</span>`),gt(He.getCell("F124").value(),null==(c=He.getCell(M+"124"))?void 0:c.value(),1,null==(u=He.getCell(`${D}124`))?void 0:u.numeric(),null==(g=He.getCell("G124"))?void 0:g.value()),gt(He.getCell("F125").value(),null==(A=He.getCell(M+"125"))?void 0:A.value(),1,null==(N=He.getCell(`${D}125`))?void 0:N.numeric(),null==(q=He.getCell("G125"))?void 0:q.value()),U($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),U($("#furnitureList .list-option-container").last(),`<h4 class="pricelist-header small no-padding">${He.getCell("F127").value()}</h4><span class='notation amount'>${a.kAmount}</span><span class='notation'>${a.kCost}</span>`),gt(He.getCell("F128").value(),null==(j=He.getCell(M+"128"))?void 0:j.value(),1,null==(O=He.getCell(`${D}128`))?void 0:O.numeric(),null==(J=He.getCell("G128"))?void 0:J.value()),gt(He.getCell("F129").value(),null==(V=He.getCell(M+"129"))?void 0:V.value(),1,null==(W=He.getCell(`${D}129`))?void 0:W.numeric(),null==(R=He.getCell("G129"))?void 0:R.value()),gt(He.getCell("F130").value(),null==(Y=He.getCell(M+"130"))?void 0:Y.value(),2,null==(Q=He.getCell(`${D}130`))?void 0:Q.numeric(),null==(Z=He.getCell("G130"))?void 0:Z.value()),gt(He.getCell("F131").value(),null==(X=He.getCell(M+"131"))?void 0:X.value(),1,null==(ee=He.getCell(`${D}131`))?void 0:ee.numeric(),null==(te=He.getCell("G131"))?void 0:te.value()),gt(He.getCell("F132").value(),null==(ne=He.getCell(M+"132"))?void 0:ne.value(),1,null==(le=He.getCell(`${D}132`))?void 0:le.numeric(),null==(ie=He.getCell("G132"))?void 0:ie.value()),U($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${He.getCell("F133").value()}</h4><span class='notation amount'>${a.kAmount}</span><span class='notation'>${a.kCost}</span>`),gt(He.getCell("F134").value(),null==(oe=He.getCell(M+"134"))?void 0:oe.value(),Math.ceil(.48*v),null==(ae=He.getCell(`${D}134`))?void 0:ae.numeric(),null==(se=He.getCell("G134"))?void 0:se.value()),gt(He.getCell("F135").value(),null==(re=He.getCell(M+"135"))?void 0:re.value(),1,null==(ce=He.getCell(`${D}135`))?void 0:ce.numeric(),null==(ue=He.getCell("G135"))?void 0:ue.value()),gt(He.getCell("F137").value(),null==(ge=He.getCell(M+"137"))?void 0:ge.value(),1,null==(pe=He.getCell(`${D}137`))?void 0:pe.numeric(),null==(de=He.getCell("G137"))?void 0:de.value()),gt(He.getCell("F139").value(),null==(me=He.getCell(M+"139"))?void 0:me.value(),1,null==(ve=He.getCell(`${D}139`))?void 0:ve.numeric(),null==(he=He.getCell("G139"))?void 0:he.value()),gt(He.getCell("F140").value(),null==(fe=He.getCell(M+"140"))?void 0:fe.value(),1,null==(Ce=He.getCell(`${D}140`))?void 0:Ce.numeric(),null==($e=He.getCell("G140"))?void 0:$e.value()),gt(He.getCell("F136").value(),null==(_e=He.getCell(M+"136"))?void 0:_e.value(),C>1?1:0,null==(ye=He.getCell(`${D}136`))?void 0:ye.numeric(),null==(we=He.getCell("G136"))?void 0:we.value()),gt(He.getCell("F138").value(),null==(be=He.getCell(M+"138"))?void 0:be.value(),2,null==(ke=He.getCell(`${D}138`))?void 0:ke.numeric(),null==(Le=He.getCell("G138"))?void 0:Le.value()),$("#furnitureList").append('</div><div class="list-option-container margined"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${He.getCell("F141").value()}</h4>\n            <span class='notation amount'>${a.kAmount}</span>\n            <span class='notation'>${a.kCost}</span>`),gt(He.getCell("F142").value(),null==(Se=He.getCell(M+"142"))?void 0:Se.value(),C,null==(Fe=He.getCell(`${D}142`))?void 0:Fe.numeric(),null==(Be=He.getCell("G142"))?void 0:Be.value()),gt(He.getCell("F143").value(),null==(xe=He.getCell(M+"143"))?void 0:xe.value(),C,null==(Pe=He.getCell(`${D}143`))?void 0:Pe.numeric(),null==(Te=He.getCell("G143"))?void 0:Te.value()),gt(He.getCell("F144").value(),null==(Ee=He.getCell(M+"144"))?void 0:Ee.value(),C,null==(Ae=He.getCell(`${D}144`))?void 0:Ae.numeric(),null==(Ne=He.getCell("G144"))?void 0:Ne.value()),gt(He.getCell("F145").value(),null==(Ge=He.getCell(M+"145"))?void 0:Ge.value(),1,null==(De=He.getCell(`${D}145`))?void 0:De.numeric(),null==(Me=He.getCell("G145"))?void 0:Me.value()),gt(He.getCell("F146").value(),null==(ze=He.getCell(M+"146"))?void 0:ze.value(),C-1,null==(Ke=He.getCell(`${D}146`))?void 0:Ke.numeric(),null==(Ie=He.getCell("G146"))?void 0:Ie.value()),U($("#furnitureList"),H(He.getCell("F147").value()," ",Math.round(.3*K)+"€")),K*=1.3,U($("#furnitureList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),U($("#furnitureList .list-option-container").last(),`<span class='pricelist-header small no-padding'>Total for furniture:</span><span class='list-text summary work'>${e.formatCurrency(K)} €</span>`));if(L||k||b||w||y||S>0||F||B||x){$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${He.getCell("F102").value()}</h4><span class='notation amount'></span><span class='notation'>${a.kCost}</span>`);let t=0;const n=[He.getCell(`${D}103`).numeric()*v,He.getCell(`${D}104`).numeric(),(v<=60?440:410)*Ue*2*v*Ve/Ye,He.getCell(`${D}106`).numeric(),((v<=60?90.02:v<=95?60.78:v<125?58.29:v>=125?79.01:0)+(v<=60?60.91:v<=95?64.57:v<125?63.87:v>=125?66.24:0))*v*Re,He.getCell(`${D}108`).numeric()/1.23,He.getCell(`${D}109`).numeric()*We/Ye,He.getCell(`${D}110`).numeric()*We/Ye,He.getCell(`${D}112`).numeric()*v],l=[y?1:0,w,k?1:0,S,F?1:0,B?1:0,L?1:0,L?1:0,x],i=[103,104,105,106,107,108,109,110,112];for(let o=0;o<i.length;o++){const a=n[o]*l[o]*He.getCell("S104").numeric();0!==a&&0!=l[o]&&(t+=a,U(et,H(null==(qe=He.getCell("F"+i[o]))?void 0:qe.value(),"",e.formatCurrency(a)+" €")))}if(x>0){const n=x*He.getCell(`${D}113`).numeric()*(1+He.getCell("S113").numeric()/100)/He.getCell("E5").numeric(),l=.05*n*Re;U(et,H(null==(je=He.getCell("F113"))?void 0:je.value(),"",e.formatCurrency(n)+" €")),U(et,H(null==(Oe=He.getCell("F114"))?void 0:Oe.value(),"",e.formatCurrency(l)+" €")),t+=l+n}U($("#workList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),U($("#workList .list-option-container").last(),`<span class='pricelist-header small no-padding'>Total for options:</span><span class='list-text summary work'>${e.formatCurrency(t)} €</span>`),z+=t}function gt(t,n,l,i,o){m&&0!=l&&l&&i&&(K+=i*l,U(G,'<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"></div></div>'),null!==n?U($("#furnitureList .option-block .list-option-container").last(),`<span class='name'>${t}, ${n}</span><span class='list-text amount'>${l} ${o}</span><span class='list-text'>${e.formatCurrency(i*l)} €</span>`):U($("#materialsList .option-block .list-option-container").last(),`<span class='name'>${t}</span><span class='list-text'>${l} ${o}</span>`))}d||$(".comfy-section").toggle(!1),m||$("#furnitureList").toggle(!1),U($("#materialsList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),U($("#materialsList .list-option-container").last(),`<span class='pricelist-header small no-padding'>Total for construction with components and finishing materials:</span><span class='list-text summary work'>${e.formatCurrency(z)} €</span>`);let pt=0;const dt=document.getElementById("appliancesListTotal"),mt=[];if("gorenje"===E?mt.push(154,9):"bosch"===E?mt.push(169,10):"smeg"===E?mt.push(185,9):mt.push(154,9),d){let t="";for(let n=0;n<mt[1];n++){const l=.9*He.getCell("D"+(mt[0]+n)).numeric();t+=`<div class="option-block">\n          <div class="division-block pricelist"></div>\n          <div class="list-option-container"><span class='name'>${He.getCell("F"+(mt[0]+n)).value()} ${He.getCell("E"+(mt[0]+n)).value()}</span>\n            <span class='list-text amount'>1 piece</span>\n            <span class='list-text'>${e.formatCurrency(l)}€</span>\n            </div>\n            </div>`,pt+=l}const n=He.getCell("G35").numeric(),l=He.getCell("E5").numeric();pt+=mt[1]*n/l,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>Appliances delivery</span><span class='list-text amount'></span><span class='list-text'>${e.formatCurrency(mt[1]*n/l)} €</span></div></div>`,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${He.getCell("F165").value()}</span><span class='list-text amount'></span><span class='list-text'>${e.formatCurrency(.2*pt)} €</span></div></div>`,pt*=1.2,t+=`<div class="division-block pricelist"></div><div class="list-option-container summary"><span class='pricelist-header small no-padding'>Total for appliances:</span><span class='list-text summary work'>${e.formatCurrency(pt)} €</span></div>`,dt.innerHTML=dt.innerHTML+t}else dt.style.display="none";if(L){const t=He.getCell(`${D}109`).numeric();$("#kitchenPrice").html(e.formatCurrency(t*We)+" €")}else $("#kitchenSection").toggle(!1);z+=pt,$("#totalPriceTotal").html(e.formatCurrency(z)+" € *"),$("#totalVAT").html(e.formatCurrency(1.23*z)+" € *"),$("#total").html(e.formatCurrency(1.23*z))})),$("#wf-form-consult").on("submit",(function(e){if(e.preventDefault(),$("#agreementCheckbox").is(":checked")?$(".warning.agreementcheckbox:not(.specification)").toggle(!1):$(".warning.agreementcheckbox:not(.specification)").toggle(!0),$("#phone").val()?$(".warning.phone:not(.specification)").toggle(!1):$(".warning.phone:not(.specification)").toggle(!0),$("#name").val()?$(".warning.name:not(.specification)").toggle(!1):$(".warning.name:not(.specification)").toggle(!0),$(".warning:not(.specification)").is(":visible"))return e.preventDefault(),!1;g.collectPortugalClientData(new FormData(document.getElementById("wf-form-consult")))}));const q=document.getElementById("sName"),j=document.getElementById("sEmail");$("#wf-form-specification").on("submit",(function(e){return c(this,null,(function*(){e.preventDefault();const t=j.value;if($("#agreementCheckbox").is(":checked")?$(".warning.agreementcheckbox.specification").toggle(!1):$(".warning.agreementcheckbox.specification").toggle(!0),q.value.length<2?$(".warning.name.specification").toggle(!0):$(".warning.name.specification").toggle(!1),0==t.length?($(".warning.wrongEmail.specification").toggle(!1),$(".warning.emptyEmail.specification").toggle(!0)):s.test(t)?($(".warning.wrongEmail.specification").toggle(!1),$(".warning.emptyEmail.specification").toggle(!1)):($(".warning.wrongEmail.specification").toggle(!0),$(".warning.emptyEmail.specification").toggle(!1)),$(".warning.specification").is(":visible"))return e.stopImmediatePropagation(),!1;g.collectPortugalSpecificationData(new FormData(document.getElementById("wf-form-specification"))),function(){return c(this,null,(function*(){$(".modal-note.specification").html("Please wait...");const e=$("html").clone().find("script").remove().end().html(),t=new File(['<!DOCTYPE html><html lang="en_US">'+e+"</html>"],"source.html",{type:"text/html"}),n=new FormData;n.append("file",t,"source.html");const l=yield fetch("https://api.fortes.agency/convert",{method:"POST",body:n}),i=yield l.json(),o=i.success?i.id:"";$(".modal-note.specification").html("We sent your estimation to your email address. If you don't see it, check Spam folder or wait a few minutes.");const a=q.value,s=j.value,r=new Intl.DateTimeFormat("en-US",{month:"2-digit",day:"2-digit",year:"numeric"}).format(new Date).replace(/\//g,"-");return fetch("https://api.fortes.agency/mail",{method:"POST",body:JSON.stringify({fileId:o,fileName:`${a} ${r}`,recipientMail:s,lang:"eng",name:a}),headers:{"Content-Type":"application/json"}})}))}().finally((()=>{window.location.assign("/sdyakuiemo")}))}))})),document.querySelector('input[name="Phone-Number"]').name="Phone Number";const O=document.querySelector("div.modal-container.consult"),J=document.querySelector("div.modal-container.specification-final");function H(e,t,n){return`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${e}</span><span class='list-text amount'>${t}</span><span class='list-text'>${n}</span></div></div>`}function U(e,t){e.append(t)}document.querySelectorAll('.gradientrevamped[data-click-action="consultation"]').forEach((e=>e.addEventListener("click",(()=>{O.classList.add("shown")})))),document.querySelector("div.consult-modal .cross-button").addEventListener("click",(()=>O.classList.remove("shown"))),O.addEventListener("click",(()=>O.classList.remove("shown"))),document.querySelectorAll('.gradientrevamped[data-click-action="specification"]').forEach((e=>e.addEventListener("click",(()=>{J.classList.add("shown")})))),document.querySelector("div.specification-modal .cross-button").addEventListener("click",(()=>J.classList.remove("shown"))),J.addEventListener("click",(()=>J.classList.remove("shown"))),document.querySelector("div.consult-modal").addEventListener("click",(function(e){e.stopPropagation()})),document.querySelector("div.specification-modal").addEventListener("click",(function(e){e.stopPropagation()})),$("img").each((function(){$(this).attr("loading","eager")}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,