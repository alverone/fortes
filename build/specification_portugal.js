(()=>{"use strict";class e{static formatCurrency(e,l){return Intl.NumberFormat("uk-UA",{maximumFractionDigits:null!=l?l:2}).format(e)}}class l{constructor(e,l){this.address=e,this._value=l}hasValue(){return null!==this._value&&this._value.length>0}value(){return this._value}numeric(){return parseFloat(this._value)}formattedNumerical(){return e.formatCurrency(parseFloat(this.value()))}}class t{constructor(e){this.cells=e}getCell(e){const l=this.cells.filter((l=>l.address===e));return 0==l.length?null:l[0]}}class n{get(e){try{return JSON.parse(localStorage.getItem(e))}catch(l){return localStorage.getItem(e)}}set(e,l){localStorage.setItem(e,l.toString())}init(){this.set("style","cozy"),this.set("bath",!0),this.set("shower",!1),this.set("ceiling","stretch ceiling"),this.set("flooring","laminat"),this.set("hygienic_shower",!1),this.set("second_gypsum_layer",!1),this.set("floor_screed",!1),this.set("heated_flooring",!1),this.set("denoising",!1),this.set("entrance_doors",!1),this.set("conditioning",!1),this.set("amount_of_rooms",2),this.set("amount_of_bathrooms",1),this.set("appliances","gorenje"),this.set("appliances_bool_total",!1),this.set("furniture_bool",!0),this.set("space",50)}initPortugal(){this.set("style","cozy"),this.set("space",50),this.set("amount_of_rooms",2),this.set("amount_of_bathrooms",1),this.set("bath",!0),this.set("shower",!1),this.set("flooring","laminat"),this.set("finishing_materials",!1),this.set("demontage",!1),this.set("cement_screed",!1),this.set("heated_flooring",0),this.set("denoising",!1),this.set("entrance_doors",!1),this.set("windows_installation",0),this.set("builtin_furniture",!1),this.set("conditioning",0),this.set("furniture_bool",!1),this.set("appliances_bool_total",!1),this.set("appliances","gorenje")}storageToRequestBody(e){const l={};for(const t in e)"length"!==t&&"costPerMetre"!=t&&("true"!==String(e[t])?"false"!==String(e[t])?isFinite(Number(e[t]))?l[t]=Number(e[t]):l[t]=e[t]:l[t]=0:l[t]=1);return JSON.stringify(l)}}class i{static numberToEncodedLetter(e){if(isNaN(e))return;let l,t=(e=Math.abs(Math.floor(e)))%26,n=e/26;return e<=26?this.numToLetter(e):(n>=1&&(0===t&&n--,l=this.numberToEncodedLetter(n)),0===t&&(t=26),l+this.numToLetter(t))}static numToLetter(e){if(!(e>26||e<0))return 0===e?"":this.alphabet.slice(e-1,e)}}i.alphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZ";class s{}s.kCost="Cost",s.kAmount="Amount",s.kKitchen="Kitchen",s.kLMonth="month",fetch("https://docs.google.com/spreadsheets/d/1KkkpKbytztt48mwP1RGgpVFpfke8-IqB0KLWA8Sn2FE/gviz/tq?tqx=out:json&gid=1219923480").then((e=>e.text())).then((a=>{var o,r,u,c,d,v,p,g,m,C,h,f,k,y,b,F,L,_,w,G,x,M,T,N,S,B,A,E,P,I,K,j,z,D,q,J,O,R,V,H,Q,U,W,X,Y,Z,ee,le,te,ne,ie,se,ae,oe,re,ue,ce,de,ve,pe,ge,me,Ce;const he=JSON.parse(a.substring(a.length-2,0).replace("/*O_o*/\ngoogle.visualization.Query.setResponse(","")).table.rows,$e=new t(he.map(((e,t)=>e.c.map((function(e,n){var s;if(null!==e&&null!==e.v)return new l(`${i.numberToEncodedLetter(n+1)}${t+1}`,null!=(s=e.v)?s:e.f)})).filter((e=>null!=e)))).reduce(((e,l)=>[...e,...l]))),fe=new n;let ke=fe.get("appliances");const ye=fe.get("style"),be=function(e){let l="J";"cozy"==e?l="J":"japandi"==e?l="L":"fusion"==e?l="N":"modern"==e?l="P":"neoclassic"==e&&(l="R");return l}(ye);let Fe=Boolean(fe.get("appliances_bool_total")),Le=Boolean(fe.get("furniture_bool")),_e=fe.get("space"),we=Boolean(fe.get("bath")),Ge=Boolean(fe.get("shower")),xe=fe.get("amount_of_rooms"),Me=fe.get("amount_of_bathrooms"),Te="",Ne="",Se=Boolean(fe.get("demontage")),Be=fe.get("windows_installation"),Ae=Boolean(fe.get("finishing_materials")),Ee=Boolean(fe.get("cement_screed")),Pe=Boolean(fe.get("builtin_furiture")),Ie=fe.get("heated_flooring"),Ke=Boolean(fe.get("denoising")),je=Boolean(fe.get("entrance_doors")),ze=fe.get("conditioning"),De=fe.get("flooring"),qe=0,Je=0,Oe=$("#furnitureList"),Re=_e<=40?3:_e<=80?4:_e<=100?5:_e<=130?6:_e<=150?7:_e<=175?8:9;"modern"!=ye&&"neoclassic"!=ye||(Re+=1),$("#months").html(Re.toString());const Ve=$e.getCell("S46").numeric(),He=$e.getCell("S44").numeric();"cozy"==ye?(Te="I",Ne="A"):"japandi"==ye?(Te="K",Ne="B"):"fusion"==ye?(Te="M",Ne="C"):"modern"==ye?(Te="O",Ne="D"):"neoclassic"==ye&&(Te="Q",Ne="E");let Qe,Ue,We=0;"vynil"==De?(Qe="60",Ue="86",We=_e*(_e<=70?220.33:161.8)*Ve*2):"parket"==De?(Qe="61",Ue="87",We=_e*(_e<=80?369.96:240.31)*Ve*2):(Qe="59",Ue="85",We=_e*(_e<=70?201.26:198.81)*Ve*2);let Xe=$("#workList"),Ye="",Ze=2523*((xe>0?6:0)+(we?2:0)+(Ge?2:0)+2*Me)*Ve*2*He+(we?1:0)*Me*2500*2*He*Ve-950*Ve/41+4e3*(Ge?1:0)*Me*2*He*Ve-800*Ve/41,el=1974*((xe>0?3:0)+(we?1:0)+(Ge?1:0)+2*Me)*Ve*2*He;const ll=_e*Me*(_e<=100?83.2:33.98)*He*Ve*2,tl=(_e/xe<=50?850*_e:24*xe*3519)*Ve*He,nl=[_e/xe<=50?_e*(_e<=60?1142.78:_e<=95?883.87:819.43)*Ve*1.45:4*Math.sqrt(_e)*3*600*Ve,_e*(_e<=60?283.08:_e<=95?281.22:_e<=124?338.33:362.47)*Ve*1.35*1.45,_e*(_e<=60?700.67:_e<=100?687.36:_e<=130?341.25:317.36)*Ve*1.1*1.5/2,(_e/xe<50?1.77*(_e<=50?1e3*_e:990*_e):4*Math.sqrt(_e)*3*600)*Ve,_e*(_e<=60?418.86:_e<=100?416.29:_e<=135?416.73:416.67)*1.77*Ve,140*(_e<=60?$e.getCell(`${Te}55`).numeric():_e<=80?50:_e<=120?78:_e<=180?114:162)*("modern"==ye||"neoclassic"==ye?1:0),We,_e*(_e<=70?114.47:86.84)*Ve*2,_e*(_e<=70?206.59:170)*Ve*2*("japandi"==ye||"fusion"==ye?1:0)],il=[1,1,Me,1,1,1,1,1,1],sl=[50,51,52,55,56,57,Qe,63,64];qe+=Ze,Ye=pl($e.getCell("F44").value(),"",Math.round(Ze)+" €"),$("#workList").append(Ye),qe+=el,Ye=pl($e.getCell("F45").value(),"",Math.round(el)+" €"),$("#workList").append(Ye),qe+=ll,Ye=pl($e.getCell("F46").value(),"",Math.round(ll)+" €"),$("#workList").append(Ye),qe+=tl,Ye=pl($e.getCell("F49").value(),"",Math.round(tl)+" €"),$("#workList").append(Ye);for(let e=0;e<sl.length;e++){const l=nl[e]*il[e]*He;0===l||isNaN(l)||(qe+=l,Ye=pl($e.getCell("F"+sl[e]).value(),"",Math.round(l)+" €"),$("#workList").append(Ye))}if(Ae){$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F68").value()}</h4><span class='notation amount'> </span><span class='notation'>${s.kCost}</span>`);let e=[$e.getCell(`${Te}69`).numeric(),$e.getCell(`${Te}70`).numeric(),$e.getCell(`${Te}71`).numeric(),$e.getCell(`${Te}72`).numeric(),$e.getCell(`${Te}73`).numeric(),64*$e.getCell("S71").numeric(),$e.getCell(`${Te}76`).numeric(),$e.getCell(`${Te}77`).numeric(),$e.getCell(`${Te}78`).numeric(),$e.getCell(`${Te}79`).numeric(),$e.getCell(`${Te}80`).numeric(),$e.getCell(`${Te}81`).numeric(),$e.getCell(`${Te}82`).numeric(),$e.getCell(`${Te}83`).numeric(),$e.getCell(`${Te+Ue}`).numeric()],l=[Me+xe,35*Me,.66*_e,.66*_e,.59*_e,_e<=50?42:_e<=90?60:_e<=120?84:90,Me,Number(we),Number(Ge),Number(we)+Number(Ge),Me,Me,Me,Me,_e<100?_e-7*Me:_e-10*Me],t=[69,70,71,72,73,74,76,77,78,79,80,82,83,84,Ue];for(let n=0;n<t.length;n++){const i=e[n]*l[n]*$e.getCell("S69").numeric()/1.23;0===i||isNaN(i)||(qe+=i,Ye=pl($e.getCell("F"+t[n]).value(),"",Math.round(i)+"€"),$("#workList").append(Ye))}}$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F93").value()}</h4>\n        <span class='notation amount'>${s.kAmount}</span>\n        <span class='notation'>${s.kCost}</span>`),Ye=`<div class="option-block">\n      <div class="division-block pricelist"></div>\n      <div class="list-option-container">\n        <span class='name'>${$e.getCell("F94").value()}</span>\n        <span class='list-text amount'>${Re} months</span>\n        <span class='list-text'> </span>\n      </div>\n    </div>`,$("#workList").append(Ye);const al=[(41e3*Math.ceil(($e.getCell("G18").numeric()+1+1)/5)/1.35/2/1.5+100*_e)*He*Ve,.022*qe*Ve,(2*Re*1200+3e3+220*_e)*He*Ve],ol=[95,96,97];for(let l=0;l<ol.length;l++){const t=al[l];qe+=t,Ye=`<div class="option-block">\n        <div class="division-block pricelist"></div>\n        <div class="list-option-container">\n          <span class='name'>${$e.getCell(`F${ol[l]}`).value()}</span>\n            <span class='list-text amount'>${e.formatCurrency(t/Re)} €/${s.kLMonth}</span>\n          <span class='list-text'>${e.formatCurrency(t)} €</span>\n        </div>\n      </div>`,$("#workList").append(Ye)}if(Le&&($("#furnitureList").append('</div><div class="list-option-container"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${s.kKitchen}</h4>\n          <span class='notation amount'>${s.kAmount}</span>\n          <span class='notation'>${s.kCost}</span>`),rl($e.getCell("F121").value(),null==(o=$e.getCell(`${Ne}121`))?void 0:o.value(),1,$e.getCell(`${Te}121`).numeric(),$e.getCell("G121").value()),rl($e.getCell("F122").value(),null==(r=$e.getCell(`${Ne}122`))?void 0:r.value(),4,$e.getCell(`${Te}122`).numeric(),$e.getCell("G122").value()),rl($e.getCell("F123").value(),null==(u=$e.getCell(`${Ne}123`))?void 0:u.value(),1,$e.getCell(`${Te}123`).numeric(),$e.getCell("G123").value()),gl($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),gl($("#furnitureList .list-option-container").last(),`<h4 class="pricelist-header small no-padding">${$e.getCell("F124").value()}</h4><span class='notation amount'>${s.kAmount}</span><span class='notation'>${s.kCost}</span>`),rl($e.getCell("F124").value(),null==(c=$e.getCell(Ne+"124"))?void 0:c.value(),1,null==(d=$e.getCell(`${Te}124`))?void 0:d.numeric(),null==(v=$e.getCell("G124"))?void 0:v.value()),rl($e.getCell("F125").value(),null==(p=$e.getCell(Ne+"125"))?void 0:p.value(),1,null==(g=$e.getCell(`${Te}125`))?void 0:g.numeric(),null==(m=$e.getCell("G125"))?void 0:m.value()),gl($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),gl($("#furnitureList .list-option-container").last(),`<h4 class="pricelist-header small no-padding">${$e.getCell("F127").value()}</h4><span class='notation amount'>${s.kAmount}</span><span class='notation'>${s.kCost}</span>`),rl($e.getCell("F128").value(),null==(C=$e.getCell(Ne+"128"))?void 0:C.value(),1,null==(h=$e.getCell(`${Te}128`))?void 0:h.numeric(),null==(f=$e.getCell("G128"))?void 0:f.value()),rl($e.getCell("F129").value(),null==(k=$e.getCell(Ne+"129"))?void 0:k.value(),1,null==(y=$e.getCell(`${Te}129`))?void 0:y.numeric(),null==(b=$e.getCell("G129"))?void 0:b.value()),rl($e.getCell("F130").value(),null==(F=$e.getCell(Ne+"130"))?void 0:F.value(),2,null==(L=$e.getCell(`${Te}130`))?void 0:L.numeric(),null==(_=$e.getCell("G130"))?void 0:_.value()),rl($e.getCell("F131").value(),null==(w=$e.getCell(Ne+"131"))?void 0:w.value(),1,null==(G=$e.getCell(`${Te}131`))?void 0:G.numeric(),null==(x=$e.getCell("G131"))?void 0:x.value()),rl($e.getCell("F132").value(),null==(M=$e.getCell(Ne+"132"))?void 0:M.value(),1,null==(T=$e.getCell(`${Te}132`))?void 0:T.numeric(),null==(N=$e.getCell("G132"))?void 0:N.value()),gl($("#furnitureList"),'</div><div class="list-option-container margined"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F133").value()}</h4><span class='notation amount'>${s.kAmount}</span><span class='notation'>${s.kCost}</span>`),rl($e.getCell("F134").value(),null==(S=$e.getCell(Ne+"134"))?void 0:S.value(),Math.ceil(.48*_e),null==(B=$e.getCell(`${Te}134`))?void 0:B.numeric(),null==(A=$e.getCell("G134"))?void 0:A.value()),rl($e.getCell("F135").value(),null==(E=$e.getCell(Ne+"135"))?void 0:E.value(),1,null==(P=$e.getCell(`${Te}135`))?void 0:P.numeric(),null==(I=$e.getCell("G135"))?void 0:I.value()),rl($e.getCell("F137").value(),null==(K=$e.getCell(Ne+"137"))?void 0:K.value(),1,null==(j=$e.getCell(`${Te}137`))?void 0:j.numeric(),null==(z=$e.getCell("G137"))?void 0:z.value()),rl($e.getCell("F139").value(),null==(D=$e.getCell(Ne+"139"))?void 0:D.value(),1,null==(q=$e.getCell(`${Te}139`))?void 0:q.numeric(),null==(J=$e.getCell("G139"))?void 0:J.value()),rl($e.getCell("F140").value(),null==(O=$e.getCell(Ne+"140"))?void 0:O.value(),1,null==(R=$e.getCell(`${Te}140`))?void 0:R.numeric(),null==(V=$e.getCell("G140"))?void 0:V.value()),rl($e.getCell("F136").value(),null==(H=$e.getCell(Ne+"136"))?void 0:H.value(),xe>1?1:0,null==(Q=$e.getCell(`${Te}136`))?void 0:Q.numeric(),null==(U=$e.getCell("G136"))?void 0:U.value()),rl($e.getCell("F138").value(),null==(W=$e.getCell(Ne+"138"))?void 0:W.value(),2,null==(X=$e.getCell(`${Te}138`))?void 0:X.numeric(),null==(Y=$e.getCell("G138"))?void 0:Y.value()),$("#furnitureList").append('</div><div class="list-option-container margined"></div>'),$("#furnitureList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F141").value()}</h4>\n            <span class='notation amount'>${s.kAmount}</span>\n            <span class='notation'>${s.kCost}</span>`),rl($e.getCell("F142").value(),null==(Z=$e.getCell(Ne+"142"))?void 0:Z.value(),xe,null==(ee=$e.getCell(`${Te}142`))?void 0:ee.numeric(),null==(le=$e.getCell("G142"))?void 0:le.value()),rl($e.getCell("F143").value(),null==(te=$e.getCell(Ne+"143"))?void 0:te.value(),xe,null==(ne=$e.getCell(`${Te}143`))?void 0:ne.numeric(),null==(ie=$e.getCell("G143"))?void 0:ie.value()),rl($e.getCell("F144").value(),null==(se=$e.getCell(Ne+"144"))?void 0:se.value(),xe,null==(ae=$e.getCell(`${Te}144`))?void 0:ae.numeric(),null==(oe=$e.getCell("G144"))?void 0:oe.value()),rl($e.getCell("F145").value(),null==(re=$e.getCell(Ne+"145"))?void 0:re.value(),1,null==(ue=$e.getCell(`${Te}145`))?void 0:ue.numeric(),null==(ce=$e.getCell("G145"))?void 0:ce.value()),rl($e.getCell("F146").value(),null==(de=$e.getCell(Ne+"146"))?void 0:de.value(),xe-1,null==(ve=$e.getCell(`${Te}146`))?void 0:ve.numeric(),null==(pe=$e.getCell("G146"))?void 0:pe.value()),gl($("#furnitureList"),pl($e.getCell("F147").value()," ",Math.round(.3*Je)+"€")),Je*=1.3,gl($("#furnitureList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),gl($("#furnitureList .list-option-container").last(),`<span class='name summary'>Total for appliances:</span><span class='list-text summary work'>${e.formatCurrency(Je)} €</span>`)),Pe||Ee||Ae||Be||Se||Ie>0||Ke||je||ze){$("#workList").append('</div><div class="list-option-container margined"></div>'),$("#workList .list-option-container").last().append(`<h4 class="pricelist-header small no-padding">${$e.getCell("F102").value()}</h4><span class='notation amount'></span><span class='notation'>${s.kCost}</span>`);const l=[$e.getCell(`${Te}103`).numeric()*_e,$e.getCell(`${Te}104`).numeric(),_e<=60?440:410*Ve*2,$e.getCell(`${Te}106`).numeric(),((_e<=60?90.02:_e<=95?60.78:_e<125?58.29:_e>=125?79.01:0)+(_e<=60?60.91:_e<=95?64.57:_e<125?63.87:_e>=125?66.24:0))*_e*$e.getCell("T103").numeric(),$e.getCell(`${Te}108`).numeric()/1.23,$e.getCell(`${Te}109`).numeric()/1.23,$e.getCell(`${Te}110`).numeric()/1.23],t=[Se?1:0,Be,Ee?1:0,Ie,Ke?1:0,je?1:0,Pe?1:0,Pe?1:0],n=[103,104,105,106,107,108,109,110];for(let i=0;i<n.length;i++){const s=l[i]*t[i]*$e.getCell("S104").numeric();0!==s&&0!=t[i]&&(qe+=s,gl(Xe,pl(null==(ge=$e.getCell("F"+n[i]))?void 0:ge.value(),"",e.formatCurrency(s)+"€")))}if(ze>0){const l=ze*$e.getCell(`${Te}113`).numeric()*(1+$e.getCell("S113").numeric()/100)/$e.getCell("E5").numeric(),t=.05*l*$e.getCell("T103").numeric();gl(Xe,pl(null==(me=$e.getCell("F113"))?void 0:me.value(),"",e.formatCurrency(l)+"€")),gl(Xe,pl(null==(Ce=$e.getCell("F114"))?void 0:Ce.value(),"",e.formatCurrency(t)+"€")),qe+=t+l}}function rl(l,t,n,i,s){Le&&0!=n&&n&&i&&(Je+=i*n,gl(Oe,'<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"></div></div>'),null!==t?gl($("#furnitureList .option-block .list-option-container").last(),`<span class='name'>${l}, ${t}</span><span class='list-text amount'>${n} ${s}</span><span class='list-text'>${e.formatCurrency(i*n)} €</span>`):gl($("#materialsList .option-block .list-option-container").last(),`<span class='name'>${l}</span><span class='list-text'>${n} ${s} </span>`))}Fe||$(".comfy-section").toggle(!1),Le||$("#furnitureList").toggle(!1),gl($("#workList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),gl($("#workList .list-option-container").last(),`<span class='name summary'>Total for construction:</span><span class='list-text summary work'>${e.formatCurrency(qe)} €</span>`),gl($("#materialsList"),'<div class="division-block pricelist"></div><div class="list-option-container summary"></div>'),gl($("#materialsList .list-option-container").last(),`<span class='name summary'>Всього по будівельній частині:</span><span class='list-text summary work'>${e.formatCurrency(qe)} €</span>`);let ul=0;const cl=document.getElementById("appliancesList"),dl=document.getElementById("appliancesListTotal"),vl=[];if("gorenje"===ke?vl.push(154,9):"bosch"===ke?vl.push(169,10):"smeg"===ke?vl.push(185,9):vl.push(154,9),Fe){let l="",t="";for(let n=0;n<vl[1];n++)l+=`<div class="option-block"><div class="division-block white"></div><div class="list-option-container appliances"><span class='name white'>${$e.getCell("F"+(vl[0]+n)).value()} ${$e.getCell("E"+(vl[0]+n)).value()}</span><span class='list-text white'>${e.formatCurrency(.9*$e.getCell("D"+(vl[0]+n)).numeric())} €</span></div></div>`,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${$e.getCell("F"+(vl[0]+n)).value()} ${$e.getCell("E"+(vl[0]+n)).value()}</span><span class='list-text amount'>1 piece</span><span class='list-text'>${e.formatCurrency(.9*$e.getCell("D"+(vl[0]+n)).numeric())}€</span></div></div>`,ul+=.9*$e.getCell("D"+(vl[0]+n)).numeric();const n=$e.getCell("G35").numeric(),i=$e.getCell("E5").numeric();ul+=vl[1]*n/i*.9,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>Доставка техніки</span><span class='list-text amount'></span><span class='list-text'>${e.formatCurrency(vl[1]*n/i*.9)} €</span></div></div>`,t+=`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${$e.getCell("F164").value()}</span><span class='list-text amount'></span><span class='list-text'>${e.formatCurrency(.2*ul)} €</span></div></div>`,l+=`<div class="option-block"><div class="division-block white"></div><div class="list-option-container appliances"><span class='name white'>Доставка техніки</span><span class='list-text white'>${e.formatCurrency(vl[1]*n/i*.9)} €</span></div></div>`,l+=`<div class="option-block"><div class="division-block white"></div><div class="list-option-container appliances"><span class='name white'>${$e.getCell("F164").value()}</span><span class='list-text white'>${e.formatCurrency(.2*ul)} €</span></div></div>`,ul*=1.2,t+=`<div class="division-block pricelist"></div><div class="list-option-container summary"><span class='name summary'>Всього по техніці:</span><span class='list-text summary work'>${e.formatCurrency(ul)} €</span></div>`,cl.innerHTML=l,dl.innerHTML=t}else dl.style.display="none";function pl(e,l,t){return`<div class="option-block"><div class="division-block pricelist"></div><div class="list-option-container"><span class='name'>${e}</span><span class='list-text amount'>${l}</span><span class='list-text'>${t}</span></div></div>`}function gl(e,l){e.append(l)}const ml=$e.getCell(`${be}121`).numeric(),Cl=$e.getCell(`${be}122`).numeric(),hl=$e.getCell(`${be}123`).numeric(),$l=Cl+ml+hl;$("#kitchenPrice").html(e.formatCurrency(ml)+" €"),$("#kitchenMontage").html(e.formatCurrency(Cl)+" €"),$("#kitchenDelivery").html(e.formatCurrency(hl)+" €"),$("#kitchenTotal").html(e.formatCurrency($l)+" €"),$("#kitchenTotalPrice").html(e.formatCurrency(ul)+" €"),Le&&(Je=0),fe.get("summedPrice")<qe?($("#totalPriceTotal").html(e.formatCurrency(qe/1.23)+" € *"),$("#totalVAT").html(e.formatCurrency(qe)+" € *")):($("#totalPriceTotal").html(e.formatCurrency(fe.get("summedPrice")/1.23)),$("#totalVAT").html(e.formatCurrency(fe.get("summedPrice"))))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,